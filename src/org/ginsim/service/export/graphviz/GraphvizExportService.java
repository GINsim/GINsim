package org.ginsim.service.export.graphviz;

import java.io.FileWriter;
import java.io.IOException;
import java.text.DateFormat;
import java.util.Collection;
import java.util.Date;

import org.ginsim.exception.GsException;
import org.ginsim.graph.Edge;
import org.ginsim.graph.Graph;
import org.ginsim.service.GsService;
import org.ginsim.service.export.Dotify;
import org.mangosdk.spi.ProviderFor;

import fr.univmrs.tagc.GINsim.global.GsEnv;

/**
 * Encode a graph to graphviz format.
 * It is based on org.jgraph.util.JGraphGraphvizEncoder
 * but isn't jgraph specific and writes the result to a File instead of putting it in a String.
 * (basically no original code remains..)
 */
@ProviderFor( GsService.class)
public class GraphvizExportService implements GsService {

	/**
	 * @param graph
	 * @param selectedOnly
	 * @param fileName
	 */
	public static void encode( Graph graph, Collection<Object> vertices,  Collection<Edge<?>> edges, String fileName) {
		DateFormat dateformat = DateFormat.getDateTimeInstance(DateFormat.LONG, DateFormat.LONG);
		String date = dateformat.format(new Date());
		try {
	        FileWriter out = new FileWriter(fileName);
	
	        out.write("/* Graphviz file generated by " +
	    			"GINsim - " + date + " */" +
	    			"\n\ndigraph G {");
	        
			// Create external keys for nodes
	        if (vertices == null) {
	        	vertices = graph.getVertices();
	        }

            // Process Nodes
	        for (Object vertex: vertices) {
	        	if (vertex instanceof Dotify) {
	        		out.write(((Dotify) vertex).toDot());
	        	} else {
		        	out.write("\n\t"+vertex+" [label=\"" + vertex + "\", shape=\"box\"];");
	        	}

	        }

	        // Process Edges
	        if (edges == null) {
	        	edges = graph.getEdges();
	        }
	        for (Edge edge: edges) {
    			Object from = edge.getSource();
            	Object to = edge.getTarget();	        			
        		if (from instanceof Dotify) {
                    out.write("\n\t"+((Dotify) from).toDot(to));
        		} else {
                    out.write("\n\t" + from + " -> " + to + ";");
        		}
	        }
	
			// Close main tags
			out.write("\n}");
			out.close();
		} catch (IOException e) {
			GsEnv.error(new GsException(GsException.GRAVITY_ERROR, e.getLocalizedMessage()), null);
		}
	}
}
