-- May 12, 2014 12:34:25 AM WEST
--
-- NuSMV implicit representation of a logical model exported by GINsim
--
-- Requires NuSMV v2.1+ for CTL properties
--
-- Requires NuSMV-ARCTL for ARCTL properties
-- http://lvl.info.ucl.ac.be/Tools/NuSMV-ARCTL-TLACE

MODULE main

IVAR
-- Simulation mode declaration --
-- Synchronous
  PCs : { PC_c1 };
  PC_c1_vars : { PC_c1_Wg_p_Wg_a_Fz_p_Fz_a_Dsh_p_Dsh_a_Slp_p_Slp_a_Nkd_p_Nkd_a_Zw3_p_Zw3_a_Arm_p_Arm_a_En_p_En_a_Hh_p_Hh_a_Ci_p_Ci_a_Ciact_p_Ciact_a_Cirep_p_Cirep_a_Ptc_p_Ptc_a_Smo_p_Smo_a_Pka_p_Pka_a_Fu_p_Fu_a_SuFu_p_SuFu_a_Cos2_p_Cos2_a };

VAR

-- State variables declaration
  Pka_a : {0, 1, 2};
  Pka_p : {0, 1, 2};
  Arm_a : {0, 1};
  Arm_p : {0, 1};
  Ci_a : {0, 1};
  Ci_p : {0, 1};
  Cos2_a : {0, 1};
  Cos2_p : {0, 1};
  Dsh_a : {0, 1};
  Dsh_p : {0, 1};
  Fu_a : {0, 1};
  Fu_p : {0, 1};
  SuFu_a : {0, 1};
  SuFu_p : {0, 1};
  Zw3_a : {0, 1};
  Zw3_p : {0, 1};
  En_a : {0, 1};
  En_p : {0, 1};
  Fz_a : {0, 1};
  Fz_p : {0, 1};
  Nkd_a : {0, 1, 2};
  Nkd_p : {0, 1, 2};
  Ptc_a : {0, 1, 2};
  Ptc_p : {0, 1, 2};
  Slp_a : {0, 1};
  Slp_p : {0, 1};
  Smo_a : {0, 1, 2};
  Smo_p : {0, 1, 2};
  Hh_a : {0, 1, 2};
  Ciact_a : {0, 1, 2};
  Ciact_p : {0, 1, 2};
  Cirep_a : {0, 1};
  Cirep_p : {0, 1};
  Hh_p : {0, 1, 2};
  Wg_a : {0, 1, 2};
  Wg_p : {0, 1, 2};

ASSIGN
-- Variable update if conditions are met
next(Wg_p) := 
  case
    update_Wg_p_OK & (Wg_p_inc) : Wg_p + 1;
    update_Wg_p_OK & (Wg_p_dec) : Wg_p - 1;
    TRUE : Wg_p;
  esac;
next(Wg_a) := 
  case
    update_Wg_a_OK & (Wg_a_inc) : Wg_a + 1;
    update_Wg_a_OK & (Wg_a_dec) : Wg_a - 1;
    TRUE : Wg_a;
  esac;
next(Fz_p) := 
  case
    update_Fz_p_OK & (Fz_p_inc) : 1;
    update_Fz_p_OK & (Fz_p_dec) : 0;
    TRUE : Fz_p;
  esac;
next(Fz_a) := 
  case
    update_Fz_a_OK & (Fz_a_inc) : 1;
    update_Fz_a_OK & (Fz_a_dec) : 0;
    TRUE : Fz_a;
  esac;
next(Dsh_p) := 
  case
    update_Dsh_p_OK & (Dsh_p_inc) : 1;
    update_Dsh_p_OK & (Dsh_p_dec) : 0;
    TRUE : Dsh_p;
  esac;
next(Dsh_a) := 
  case
    update_Dsh_a_OK & (Dsh_a_inc) : 1;
    update_Dsh_a_OK & (Dsh_a_dec) : 0;
    TRUE : Dsh_a;
  esac;
next(Slp_p) := 
  case
    update_Slp_p_OK & (Slp_p_inc) : 1;
    update_Slp_p_OK & (Slp_p_dec) : 0;
    TRUE : Slp_p;
  esac;
next(Slp_a) := 
  case
    update_Slp_a_OK & (Slp_a_inc) : 1;
    update_Slp_a_OK & (Slp_a_dec) : 0;
    TRUE : Slp_a;
  esac;
next(Nkd_p) := 
  case
    update_Nkd_p_OK & (Nkd_p_inc) : Nkd_p + 1;
    update_Nkd_p_OK & (Nkd_p_dec) : Nkd_p - 1;
    TRUE : Nkd_p;
  esac;
next(Nkd_a) := 
  case
    update_Nkd_a_OK & (Nkd_a_inc) : Nkd_a + 1;
    update_Nkd_a_OK & (Nkd_a_dec) : Nkd_a - 1;
    TRUE : Nkd_a;
  esac;
next(Zw3_p) := 
  case
    update_Zw3_p_OK & (Zw3_p_inc) : 1;
    update_Zw3_p_OK & (Zw3_p_dec) : 0;
    TRUE : Zw3_p;
  esac;
next(Zw3_a) := 
  case
    update_Zw3_a_OK & (Zw3_a_inc) : 1;
    update_Zw3_a_OK & (Zw3_a_dec) : 0;
    TRUE : Zw3_a;
  esac;
next(Arm_p) := 
  case
    update_Arm_p_OK & (Arm_p_inc) : 1;
    update_Arm_p_OK & (Arm_p_dec) : 0;
    TRUE : Arm_p;
  esac;
next(Arm_a) := 
  case
    update_Arm_a_OK & (Arm_a_inc) : 1;
    update_Arm_a_OK & (Arm_a_dec) : 0;
    TRUE : Arm_a;
  esac;
next(En_p) := 
  case
    update_En_p_OK & (En_p_inc) : 1;
    update_En_p_OK & (En_p_dec) : 0;
    TRUE : En_p;
  esac;
next(En_a) := 
  case
    update_En_a_OK & (En_a_inc) : 1;
    update_En_a_OK & (En_a_dec) : 0;
    TRUE : En_a;
  esac;
next(Hh_p) := 
  case
    update_Hh_p_OK & (Hh_p_inc) : Hh_p + 1;
    update_Hh_p_OK & (Hh_p_dec) : Hh_p - 1;
    TRUE : Hh_p;
  esac;
next(Hh_a) := 
  case
    update_Hh_a_OK & (Hh_a_inc) : Hh_a + 1;
    update_Hh_a_OK & (Hh_a_dec) : Hh_a - 1;
    TRUE : Hh_a;
  esac;
next(Ci_p) := 
  case
    update_Ci_p_OK & (Ci_p_inc) : 1;
    update_Ci_p_OK & (Ci_p_dec) : 0;
    TRUE : Ci_p;
  esac;
next(Ci_a) := 
  case
    update_Ci_a_OK & (Ci_a_inc) : 1;
    update_Ci_a_OK & (Ci_a_dec) : 0;
    TRUE : Ci_a;
  esac;
next(Ciact_p) := 
  case
    update_Ciact_p_OK & (Ciact_p_inc) : Ciact_p + 1;
    update_Ciact_p_OK & (Ciact_p_dec) : Ciact_p - 1;
    TRUE : Ciact_p;
  esac;
next(Ciact_a) := 
  case
    update_Ciact_a_OK & (Ciact_a_inc) : Ciact_a + 1;
    update_Ciact_a_OK & (Ciact_a_dec) : Ciact_a - 1;
    TRUE : Ciact_a;
  esac;
next(Cirep_p) := 
  case
    update_Cirep_p_OK & (Cirep_p_inc) : 1;
    update_Cirep_p_OK & (Cirep_p_dec) : 0;
    TRUE : Cirep_p;
  esac;
next(Cirep_a) := 
  case
    update_Cirep_a_OK & (Cirep_a_inc) : 1;
    update_Cirep_a_OK & (Cirep_a_dec) : 0;
    TRUE : Cirep_a;
  esac;
next(Ptc_p) := 
  case
    update_Ptc_p_OK & (Ptc_p_inc) : Ptc_p + 1;
    update_Ptc_p_OK & (Ptc_p_dec) : Ptc_p - 1;
    TRUE : Ptc_p;
  esac;
next(Ptc_a) := 
  case
    update_Ptc_a_OK & (Ptc_a_inc) : Ptc_a + 1;
    update_Ptc_a_OK & (Ptc_a_dec) : Ptc_a - 1;
    TRUE : Ptc_a;
  esac;
next(Smo_p) := 
  case
    update_Smo_p_OK & (Smo_p_inc) : Smo_p + 1;
    update_Smo_p_OK & (Smo_p_dec) : Smo_p - 1;
    TRUE : Smo_p;
  esac;
next(Smo_a) := 
  case
    update_Smo_a_OK & (Smo_a_inc) : Smo_a + 1;
    update_Smo_a_OK & (Smo_a_dec) : Smo_a - 1;
    TRUE : Smo_a;
  esac;
next(Pka_p) := 
  case
    update_Pka_p_OK & (Pka_p_inc) : Pka_p + 1;
    update_Pka_p_OK & (Pka_p_dec) : Pka_p - 1;
    TRUE : Pka_p;
  esac;
next(Pka_a) := 
  case
    update_Pka_a_OK & (Pka_a_inc) : Pka_a + 1;
    update_Pka_a_OK & (Pka_a_dec) : Pka_a - 1;
    TRUE : Pka_a;
  esac;
next(Fu_p) := 
  case
    update_Fu_p_OK & (Fu_p_inc) : 1;
    update_Fu_p_OK & (Fu_p_dec) : 0;
    TRUE : Fu_p;
  esac;
next(Fu_a) := 
  case
    update_Fu_a_OK & (Fu_a_inc) : 1;
    update_Fu_a_OK & (Fu_a_dec) : 0;
    TRUE : Fu_a;
  esac;
next(SuFu_p) := 
  case
    update_SuFu_p_OK & (SuFu_p_inc) : 1;
    update_SuFu_p_OK & (SuFu_p_dec) : 0;
    TRUE : SuFu_p;
  esac;
next(SuFu_a) := 
  case
    update_SuFu_a_OK & (SuFu_a_inc) : 1;
    update_SuFu_a_OK & (SuFu_a_dec) : 0;
    TRUE : SuFu_a;
  esac;
next(Cos2_p) := 
  case
    update_Cos2_p_OK & (Cos2_p_inc) : 1;
    update_Cos2_p_OK & (Cos2_p_dec) : 0;
    TRUE : Cos2_p;
  esac;
next(Cos2_a) := 
  case
    update_Cos2_a_OK & (Cos2_a_inc) : 1;
    update_Cos2_a_OK & (Cos2_a_dec) : 0;
    TRUE : Cos2_a;
  esac;

DEFINE
-- Variable next level regulation
Wg_p_focal :=
  case
    (Slp_p = 1) & (Nkd_p = 0) & (En_p = 0) & (Ciact_p = 1) : 1;
    (Slp_p = 1) & (Nkd_p = 0) & (En_p = 0) & (Ciact_p = 2) : 2;
    (Slp_p = 1) & (Nkd_p = 1) & (En_p = 0) & (Ciact_p = 1) : 1;
    (Slp_p = 1) & (Nkd_p = 1) & (En_p = 0) & (Ciact_p = 2) : 2;
    (Slp_p = 1) & (Nkd_p = 2) & (En_p = 0) & (Ciact_p = 2) : 2;
    TRUE : 0;
  esac;
Wg_a_focal :=
  case
    (Slp_a = 1) & (Nkd_a = 0) & (En_a = 0) & (Ciact_a = 1) : 1;
    (Slp_a = 1) & (Nkd_a = 0) & (En_a = 0) & (Ciact_a = 2) : 2;
    (Slp_a = 1) & (Nkd_a = 1) & (En_a = 0) & (Ciact_a = 1) : 1;
    (Slp_a = 1) & (Nkd_a = 1) & (En_a = 0) & (Ciact_a = 2) : 2;
    (Slp_a = 1) & (Nkd_a = 2) & (En_a = 0) & (Ciact_a = 2) : 2;
    TRUE : 0;
  esac;
Fz_p_focal :=
  case
    (Wg_p = 0) & (Wg_a = 2) : 1;
    (Wg_p = 1) : 1;
    (Wg_p = 2) : 1;
    TRUE : 0;
  esac;
Fz_a_focal :=
  case
    (Wg_p = 0) & (Wg_a = 1) : 1;
    (Wg_p = 0) & (Wg_a = 2) : 1;
    (Wg_p = 1) & (Wg_a = 1) : 1;
    (Wg_p = 1) & (Wg_a = 2) : 1;
    (Wg_p = 2) : 1;
    TRUE : 0;
  esac;
Dsh_p_focal :=
  case
    (Fz_p = 1) : 1;
    TRUE : 0;
  esac;
Dsh_a_focal :=
  case
    (Fz_a = 1) : 1;
    TRUE : 0;
  esac;
Slp_p_focal :=
  case
    (Dsh_p = 1) & (En_p = 0) : 1;
    TRUE : 0;
  esac;
Slp_a_focal :=
  case
    (Dsh_a = 1) & (En_a = 0) : 1;
    TRUE : 0;
  esac;
Nkd_p_focal :=
  case
    (Dsh_p = 0) & (En_p = 0) : 1;
    (Dsh_p = 1) & (En_p = 0) : 2;
    TRUE : 0;
  esac;
Nkd_a_focal :=
  case
    (Dsh_a = 0) & (En_a = 0) : 1;
    (Dsh_a = 1) & (En_a = 0) : 2;
    TRUE : 0;
  esac;
Zw3_p_focal :=
  case
    (Dsh_p = 0) : 1;
    TRUE : 0;
  esac;
Zw3_a_focal :=
  case
    (Dsh_a = 0) : 1;
    TRUE : 0;
  esac;
Arm_p_focal :=
  case
    (Zw3_p = 0) : 1;
    TRUE : 0;
  esac;
Arm_a_focal :=
  case
    (Zw3_a = 0) : 1;
    TRUE : 0;
  esac;
En_p_focal :=
  case
    (Slp_p = 0) & (Arm_p = 1) : 1;
    TRUE : 0;
  esac;
En_a_focal :=
  case
    (Slp_a = 0) & (Arm_a = 1) : 1;
    TRUE : 0;
  esac;
Hh_p_focal :=
  case
    (En_p = 0) & (Hh_a = 1) & (Cirep_p = 0) & (Ptc_a = 0) : 1;
    (En_p = 0) & (Hh_a = 1) & (Cirep_p = 0) & (Ptc_a = 1) : 1;
    (En_p = 0) & (Hh_a = 2) & (Cirep_p = 0) & (Ptc_a = 0) : 2;
    (En_p = 0) & (Hh_a = 2) & (Cirep_p = 0) & (Ptc_a = 1) : 2;
    (En_p = 0) & (Hh_a = 2) & (Cirep_p = 0) & (Ptc_a = 2) : 1;
    (En_p = 1) & (Cirep_p = 0) : 2;
    TRUE : 0;
  esac;
Hh_a_focal :=
  case
    (En_a = 0) & (Hh_p = 1) & (Cirep_a = 0) : 1;
    (En_a = 0) & (Hh_p = 2) & (Cirep_a = 0) & (Ptc_p = 0) : 2;
    (En_a = 0) & (Hh_p = 2) & (Cirep_a = 0) & (Ptc_p = 1) : 2;
    (En_a = 1) & (Cirep_a = 0) : 2;
    TRUE : 0;
  esac;
Ci_p_focal :=
  case
    (En_p = 0) : 1;
    TRUE : 0;
  esac;
Ci_a_focal :=
  case
    (En_a = 0) : 1;
    TRUE : 0;
  esac;
Ciact_p_focal :=
  case
    (Dsh_p = 0) & (Ci_p = 1) & (Pka_p = 0) & (SuFu_p = 0) : 1;
    (Dsh_p = 1) & (Ci_p = 1) & (Pka_p = 0) & (SuFu_p = 0) : 2;
    (Dsh_p = 1) & (Ci_p = 1) & (Pka_p = 0) & (SuFu_p = 1) : 1;
    (Dsh_p = 1) & (Ci_p = 1) & (Pka_p = 1) : 1;
    (Dsh_p = 1) & (Ci_p = 1) & (Pka_p = 2) : 1;
    TRUE : 0;
  esac;
Ciact_a_focal :=
  case
    (Dsh_a = 0) & (Ci_a = 1) & (Pka_a = 0) & (SuFu_a = 0) : 1;
    (Dsh_a = 1) & (Ci_a = 1) & (Pka_a = 0) & (SuFu_a = 0) : 2;
    (Dsh_a = 1) & (Ci_a = 1) & (Pka_a = 0) & (SuFu_a = 1) : 1;
    (Dsh_a = 1) & (Ci_a = 1) & (Pka_a = 1) : 1;
    (Dsh_a = 1) & (Ci_a = 1) & (Pka_a = 2) : 1;
    TRUE : 0;
  esac;
Cirep_p_focal :=
  case
    (Zw3_p = 1) & (Ci_p = 1) & (Pka_p = 2) & (Cos2_p = 1) : 1;
    TRUE : 0;
  esac;
Cirep_a_focal :=
  case
    (Zw3_a = 1) & (Ci_a = 1) & (Pka_a = 2) & (Cos2_a = 1) : 1;
    TRUE : 0;
  esac;
Ptc_p_focal :=
  case
    (En_p = 0) & (Ciact_p = 0) : 1;
    (En_p = 0) & (Ciact_p = 1) : 2;
    (En_p = 0) & (Ciact_p = 2) : 2;
    TRUE : 0;
  esac;
Ptc_a_focal :=
  case
    (En_a = 0) & (Ciact_a = 0) : 1;
    (En_a = 0) & (Ciact_a = 1) : 2;
    (En_a = 0) & (Ciact_a = 2) : 2;
    TRUE : 0;
  esac;
Smo_p_focal :=
  case
    (Hh_p = 0) & (Ptc_p = 0) : 2;
    (Hh_p = 1) & (Ptc_p = 0) : 2;
    (Hh_p = 1) & (Ptc_p = 1) : 2;
    (Hh_p = 1) & (Ptc_p = 2) : 1;
    (Hh_p = 2) : 2;
    TRUE : 0;
  esac;
Smo_a_focal :=
  case
    (Hh_a = 0) & (Ptc_a = 0) : 2;
    (Hh_a = 1) & (Ptc_a = 0) : 2;
    (Hh_a = 1) & (Ptc_a = 1) : 2;
    (Hh_a = 1) & (Ptc_a = 2) : 1;
    (Hh_a = 2) : 2;
    TRUE : 0;
  esac;
Pka_p_focal :=
  case
    (Smo_p = 0) : 2;
    TRUE : 0;
  esac;
Pka_a_focal :=
  case
    (Smo_a = 0) : 2;
    TRUE : 0;
  esac;
Fu_p_focal :=
  case
    (Smo_p = 1) : 1;
    (Smo_p = 2) : 1;
    TRUE : 0;
  esac;
Fu_a_focal :=
  case
    (Smo_a = 1) : 1;
    (Smo_a = 2) : 1;
    TRUE : 0;
  esac;
SuFu_p_focal :=
  case
    (Fu_p = 0) : 1;
    TRUE : 0;
  esac;
SuFu_a_focal :=
  case
    (Fu_a = 0) : 1;
    TRUE : 0;
  esac;
Cos2_p_focal :=
  case
    (Fu_p = 0) : 1;
    TRUE : 0;
  esac;
Cos2_a_focal :=
  case
    (Fu_a = 0) : 1;
    TRUE : 0;
  esac;

Wg_p_inc := Wg_p_focal > Wg_p;
Wg_p_dec := Wg_p_focal < Wg_p;
Wg_p_std := Wg_p_focal = Wg_p;

Wg_a_inc := Wg_a_focal > Wg_a;
Wg_a_dec := Wg_a_focal < Wg_a;
Wg_a_std := Wg_a_focal = Wg_a;

Fz_p_inc := Fz_p_focal > Fz_p;
Fz_p_dec := Fz_p_focal < Fz_p;
Fz_p_std := Fz_p_focal = Fz_p;

Fz_a_inc := Fz_a_focal > Fz_a;
Fz_a_dec := Fz_a_focal < Fz_a;
Fz_a_std := Fz_a_focal = Fz_a;

Dsh_p_inc := Dsh_p_focal > Dsh_p;
Dsh_p_dec := Dsh_p_focal < Dsh_p;
Dsh_p_std := Dsh_p_focal = Dsh_p;

Dsh_a_inc := Dsh_a_focal > Dsh_a;
Dsh_a_dec := Dsh_a_focal < Dsh_a;
Dsh_a_std := Dsh_a_focal = Dsh_a;

Slp_p_inc := Slp_p_focal > Slp_p;
Slp_p_dec := Slp_p_focal < Slp_p;
Slp_p_std := Slp_p_focal = Slp_p;

Slp_a_inc := Slp_a_focal > Slp_a;
Slp_a_dec := Slp_a_focal < Slp_a;
Slp_a_std := Slp_a_focal = Slp_a;

Nkd_p_inc := Nkd_p_focal > Nkd_p;
Nkd_p_dec := Nkd_p_focal < Nkd_p;
Nkd_p_std := Nkd_p_focal = Nkd_p;

Nkd_a_inc := Nkd_a_focal > Nkd_a;
Nkd_a_dec := Nkd_a_focal < Nkd_a;
Nkd_a_std := Nkd_a_focal = Nkd_a;

Zw3_p_inc := Zw3_p_focal > Zw3_p;
Zw3_p_dec := Zw3_p_focal < Zw3_p;
Zw3_p_std := Zw3_p_focal = Zw3_p;

Zw3_a_inc := Zw3_a_focal > Zw3_a;
Zw3_a_dec := Zw3_a_focal < Zw3_a;
Zw3_a_std := Zw3_a_focal = Zw3_a;

Arm_p_inc := Arm_p_focal > Arm_p;
Arm_p_dec := Arm_p_focal < Arm_p;
Arm_p_std := Arm_p_focal = Arm_p;

Arm_a_inc := Arm_a_focal > Arm_a;
Arm_a_dec := Arm_a_focal < Arm_a;
Arm_a_std := Arm_a_focal = Arm_a;

En_p_inc := En_p_focal > En_p;
En_p_dec := En_p_focal < En_p;
En_p_std := En_p_focal = En_p;

En_a_inc := En_a_focal > En_a;
En_a_dec := En_a_focal < En_a;
En_a_std := En_a_focal = En_a;

Hh_p_inc := Hh_p_focal > Hh_p;
Hh_p_dec := Hh_p_focal < Hh_p;
Hh_p_std := Hh_p_focal = Hh_p;

Hh_a_inc := Hh_a_focal > Hh_a;
Hh_a_dec := Hh_a_focal < Hh_a;
Hh_a_std := Hh_a_focal = Hh_a;

Ci_p_inc := Ci_p_focal > Ci_p;
Ci_p_dec := Ci_p_focal < Ci_p;
Ci_p_std := Ci_p_focal = Ci_p;

Ci_a_inc := Ci_a_focal > Ci_a;
Ci_a_dec := Ci_a_focal < Ci_a;
Ci_a_std := Ci_a_focal = Ci_a;

Ciact_p_inc := Ciact_p_focal > Ciact_p;
Ciact_p_dec := Ciact_p_focal < Ciact_p;
Ciact_p_std := Ciact_p_focal = Ciact_p;

Ciact_a_inc := Ciact_a_focal > Ciact_a;
Ciact_a_dec := Ciact_a_focal < Ciact_a;
Ciact_a_std := Ciact_a_focal = Ciact_a;

Cirep_p_inc := Cirep_p_focal > Cirep_p;
Cirep_p_dec := Cirep_p_focal < Cirep_p;
Cirep_p_std := Cirep_p_focal = Cirep_p;

Cirep_a_inc := Cirep_a_focal > Cirep_a;
Cirep_a_dec := Cirep_a_focal < Cirep_a;
Cirep_a_std := Cirep_a_focal = Cirep_a;

Ptc_p_inc := Ptc_p_focal > Ptc_p;
Ptc_p_dec := Ptc_p_focal < Ptc_p;
Ptc_p_std := Ptc_p_focal = Ptc_p;

Ptc_a_inc := Ptc_a_focal > Ptc_a;
Ptc_a_dec := Ptc_a_focal < Ptc_a;
Ptc_a_std := Ptc_a_focal = Ptc_a;

Smo_p_inc := Smo_p_focal > Smo_p;
Smo_p_dec := Smo_p_focal < Smo_p;
Smo_p_std := Smo_p_focal = Smo_p;

Smo_a_inc := Smo_a_focal > Smo_a;
Smo_a_dec := Smo_a_focal < Smo_a;
Smo_a_std := Smo_a_focal = Smo_a;

Pka_p_inc := Pka_p_focal > Pka_p;
Pka_p_dec := Pka_p_focal < Pka_p;
Pka_p_std := Pka_p_focal = Pka_p;

Pka_a_inc := Pka_a_focal > Pka_a;
Pka_a_dec := Pka_a_focal < Pka_a;
Pka_a_std := Pka_a_focal = Pka_a;

Fu_p_inc := Fu_p_focal > Fu_p;
Fu_p_dec := Fu_p_focal < Fu_p;
Fu_p_std := Fu_p_focal = Fu_p;

Fu_a_inc := Fu_a_focal > Fu_a;
Fu_a_dec := Fu_a_focal < Fu_a;
Fu_a_std := Fu_a_focal = Fu_a;

SuFu_p_inc := SuFu_p_focal > SuFu_p;
SuFu_p_dec := SuFu_p_focal < SuFu_p;
SuFu_p_std := SuFu_p_focal = SuFu_p;

SuFu_a_inc := SuFu_a_focal > SuFu_a;
SuFu_a_dec := SuFu_a_focal < SuFu_a;
SuFu_a_std := SuFu_a_focal = SuFu_a;

Cos2_p_inc := Cos2_p_focal > Cos2_p;
Cos2_p_dec := Cos2_p_focal < Cos2_p;
Cos2_p_std := Cos2_p_focal = Cos2_p;

Cos2_a_inc := Cos2_a_focal > Cos2_a;
Cos2_a_dec := Cos2_a_focal < Cos2_a;
Cos2_a_std := Cos2_a_focal = Cos2_a;

update_Wg_p_OK := (PCs = PC_c1) & (PC_c1_vars = PC_c1_Wg_p_Wg_a_Fz_p_Fz_a_Dsh_p_Dsh_a_Slp_p_Slp_a_Nkd_p_Nkd_a_Zw3_p_Zw3_a_Arm_p_Arm_a_En_p_En_a_Hh_p_Hh_a_Ci_p_Ci_a_Ciact_p_Ciact_a_Cirep_p_Cirep_a_Ptc_p_Ptc_a_Smo_p_Smo_a_Pka_p_Pka_a_Fu_p_Fu_a_SuFu_p_SuFu_a_Cos2_p_Cos2_a);
update_Wg_a_OK := (PCs = PC_c1) & (PC_c1_vars = PC_c1_Wg_p_Wg_a_Fz_p_Fz_a_Dsh_p_Dsh_a_Slp_p_Slp_a_Nkd_p_Nkd_a_Zw3_p_Zw3_a_Arm_p_Arm_a_En_p_En_a_Hh_p_Hh_a_Ci_p_Ci_a_Ciact_p_Ciact_a_Cirep_p_Cirep_a_Ptc_p_Ptc_a_Smo_p_Smo_a_Pka_p_Pka_a_Fu_p_Fu_a_SuFu_p_SuFu_a_Cos2_p_Cos2_a);
update_Fz_p_OK := (PCs = PC_c1) & (PC_c1_vars = PC_c1_Wg_p_Wg_a_Fz_p_Fz_a_Dsh_p_Dsh_a_Slp_p_Slp_a_Nkd_p_Nkd_a_Zw3_p_Zw3_a_Arm_p_Arm_a_En_p_En_a_Hh_p_Hh_a_Ci_p_Ci_a_Ciact_p_Ciact_a_Cirep_p_Cirep_a_Ptc_p_Ptc_a_Smo_p_Smo_a_Pka_p_Pka_a_Fu_p_Fu_a_SuFu_p_SuFu_a_Cos2_p_Cos2_a);
update_Fz_a_OK := (PCs = PC_c1) & (PC_c1_vars = PC_c1_Wg_p_Wg_a_Fz_p_Fz_a_Dsh_p_Dsh_a_Slp_p_Slp_a_Nkd_p_Nkd_a_Zw3_p_Zw3_a_Arm_p_Arm_a_En_p_En_a_Hh_p_Hh_a_Ci_p_Ci_a_Ciact_p_Ciact_a_Cirep_p_Cirep_a_Ptc_p_Ptc_a_Smo_p_Smo_a_Pka_p_Pka_a_Fu_p_Fu_a_SuFu_p_SuFu_a_Cos2_p_Cos2_a);
update_Dsh_p_OK := (PCs = PC_c1) & (PC_c1_vars = PC_c1_Wg_p_Wg_a_Fz_p_Fz_a_Dsh_p_Dsh_a_Slp_p_Slp_a_Nkd_p_Nkd_a_Zw3_p_Zw3_a_Arm_p_Arm_a_En_p_En_a_Hh_p_Hh_a_Ci_p_Ci_a_Ciact_p_Ciact_a_Cirep_p_Cirep_a_Ptc_p_Ptc_a_Smo_p_Smo_a_Pka_p_Pka_a_Fu_p_Fu_a_SuFu_p_SuFu_a_Cos2_p_Cos2_a);
update_Dsh_a_OK := (PCs = PC_c1) & (PC_c1_vars = PC_c1_Wg_p_Wg_a_Fz_p_Fz_a_Dsh_p_Dsh_a_Slp_p_Slp_a_Nkd_p_Nkd_a_Zw3_p_Zw3_a_Arm_p_Arm_a_En_p_En_a_Hh_p_Hh_a_Ci_p_Ci_a_Ciact_p_Ciact_a_Cirep_p_Cirep_a_Ptc_p_Ptc_a_Smo_p_Smo_a_Pka_p_Pka_a_Fu_p_Fu_a_SuFu_p_SuFu_a_Cos2_p_Cos2_a);
update_Slp_p_OK := (PCs = PC_c1) & (PC_c1_vars = PC_c1_Wg_p_Wg_a_Fz_p_Fz_a_Dsh_p_Dsh_a_Slp_p_Slp_a_Nkd_p_Nkd_a_Zw3_p_Zw3_a_Arm_p_Arm_a_En_p_En_a_Hh_p_Hh_a_Ci_p_Ci_a_Ciact_p_Ciact_a_Cirep_p_Cirep_a_Ptc_p_Ptc_a_Smo_p_Smo_a_Pka_p_Pka_a_Fu_p_Fu_a_SuFu_p_SuFu_a_Cos2_p_Cos2_a);
update_Slp_a_OK := (PCs = PC_c1) & (PC_c1_vars = PC_c1_Wg_p_Wg_a_Fz_p_Fz_a_Dsh_p_Dsh_a_Slp_p_Slp_a_Nkd_p_Nkd_a_Zw3_p_Zw3_a_Arm_p_Arm_a_En_p_En_a_Hh_p_Hh_a_Ci_p_Ci_a_Ciact_p_Ciact_a_Cirep_p_Cirep_a_Ptc_p_Ptc_a_Smo_p_Smo_a_Pka_p_Pka_a_Fu_p_Fu_a_SuFu_p_SuFu_a_Cos2_p_Cos2_a);
update_Nkd_p_OK := (PCs = PC_c1) & (PC_c1_vars = PC_c1_Wg_p_Wg_a_Fz_p_Fz_a_Dsh_p_Dsh_a_Slp_p_Slp_a_Nkd_p_Nkd_a_Zw3_p_Zw3_a_Arm_p_Arm_a_En_p_En_a_Hh_p_Hh_a_Ci_p_Ci_a_Ciact_p_Ciact_a_Cirep_p_Cirep_a_Ptc_p_Ptc_a_Smo_p_Smo_a_Pka_p_Pka_a_Fu_p_Fu_a_SuFu_p_SuFu_a_Cos2_p_Cos2_a);
update_Nkd_a_OK := (PCs = PC_c1) & (PC_c1_vars = PC_c1_Wg_p_Wg_a_Fz_p_Fz_a_Dsh_p_Dsh_a_Slp_p_Slp_a_Nkd_p_Nkd_a_Zw3_p_Zw3_a_Arm_p_Arm_a_En_p_En_a_Hh_p_Hh_a_Ci_p_Ci_a_Ciact_p_Ciact_a_Cirep_p_Cirep_a_Ptc_p_Ptc_a_Smo_p_Smo_a_Pka_p_Pka_a_Fu_p_Fu_a_SuFu_p_SuFu_a_Cos2_p_Cos2_a);
update_Zw3_p_OK := (PCs = PC_c1) & (PC_c1_vars = PC_c1_Wg_p_Wg_a_Fz_p_Fz_a_Dsh_p_Dsh_a_Slp_p_Slp_a_Nkd_p_Nkd_a_Zw3_p_Zw3_a_Arm_p_Arm_a_En_p_En_a_Hh_p_Hh_a_Ci_p_Ci_a_Ciact_p_Ciact_a_Cirep_p_Cirep_a_Ptc_p_Ptc_a_Smo_p_Smo_a_Pka_p_Pka_a_Fu_p_Fu_a_SuFu_p_SuFu_a_Cos2_p_Cos2_a);
update_Zw3_a_OK := (PCs = PC_c1) & (PC_c1_vars = PC_c1_Wg_p_Wg_a_Fz_p_Fz_a_Dsh_p_Dsh_a_Slp_p_Slp_a_Nkd_p_Nkd_a_Zw3_p_Zw3_a_Arm_p_Arm_a_En_p_En_a_Hh_p_Hh_a_Ci_p_Ci_a_Ciact_p_Ciact_a_Cirep_p_Cirep_a_Ptc_p_Ptc_a_Smo_p_Smo_a_Pka_p_Pka_a_Fu_p_Fu_a_SuFu_p_SuFu_a_Cos2_p_Cos2_a);
update_Arm_p_OK := (PCs = PC_c1) & (PC_c1_vars = PC_c1_Wg_p_Wg_a_Fz_p_Fz_a_Dsh_p_Dsh_a_Slp_p_Slp_a_Nkd_p_Nkd_a_Zw3_p_Zw3_a_Arm_p_Arm_a_En_p_En_a_Hh_p_Hh_a_Ci_p_Ci_a_Ciact_p_Ciact_a_Cirep_p_Cirep_a_Ptc_p_Ptc_a_Smo_p_Smo_a_Pka_p_Pka_a_Fu_p_Fu_a_SuFu_p_SuFu_a_Cos2_p_Cos2_a);
update_Arm_a_OK := (PCs = PC_c1) & (PC_c1_vars = PC_c1_Wg_p_Wg_a_Fz_p_Fz_a_Dsh_p_Dsh_a_Slp_p_Slp_a_Nkd_p_Nkd_a_Zw3_p_Zw3_a_Arm_p_Arm_a_En_p_En_a_Hh_p_Hh_a_Ci_p_Ci_a_Ciact_p_Ciact_a_Cirep_p_Cirep_a_Ptc_p_Ptc_a_Smo_p_Smo_a_Pka_p_Pka_a_Fu_p_Fu_a_SuFu_p_SuFu_a_Cos2_p_Cos2_a);
update_En_p_OK := (PCs = PC_c1) & (PC_c1_vars = PC_c1_Wg_p_Wg_a_Fz_p_Fz_a_Dsh_p_Dsh_a_Slp_p_Slp_a_Nkd_p_Nkd_a_Zw3_p_Zw3_a_Arm_p_Arm_a_En_p_En_a_Hh_p_Hh_a_Ci_p_Ci_a_Ciact_p_Ciact_a_Cirep_p_Cirep_a_Ptc_p_Ptc_a_Smo_p_Smo_a_Pka_p_Pka_a_Fu_p_Fu_a_SuFu_p_SuFu_a_Cos2_p_Cos2_a);
update_En_a_OK := (PCs = PC_c1) & (PC_c1_vars = PC_c1_Wg_p_Wg_a_Fz_p_Fz_a_Dsh_p_Dsh_a_Slp_p_Slp_a_Nkd_p_Nkd_a_Zw3_p_Zw3_a_Arm_p_Arm_a_En_p_En_a_Hh_p_Hh_a_Ci_p_Ci_a_Ciact_p_Ciact_a_Cirep_p_Cirep_a_Ptc_p_Ptc_a_Smo_p_Smo_a_Pka_p_Pka_a_Fu_p_Fu_a_SuFu_p_SuFu_a_Cos2_p_Cos2_a);
update_Hh_p_OK := (PCs = PC_c1) & (PC_c1_vars = PC_c1_Wg_p_Wg_a_Fz_p_Fz_a_Dsh_p_Dsh_a_Slp_p_Slp_a_Nkd_p_Nkd_a_Zw3_p_Zw3_a_Arm_p_Arm_a_En_p_En_a_Hh_p_Hh_a_Ci_p_Ci_a_Ciact_p_Ciact_a_Cirep_p_Cirep_a_Ptc_p_Ptc_a_Smo_p_Smo_a_Pka_p_Pka_a_Fu_p_Fu_a_SuFu_p_SuFu_a_Cos2_p_Cos2_a);
update_Hh_a_OK := (PCs = PC_c1) & (PC_c1_vars = PC_c1_Wg_p_Wg_a_Fz_p_Fz_a_Dsh_p_Dsh_a_Slp_p_Slp_a_Nkd_p_Nkd_a_Zw3_p_Zw3_a_Arm_p_Arm_a_En_p_En_a_Hh_p_Hh_a_Ci_p_Ci_a_Ciact_p_Ciact_a_Cirep_p_Cirep_a_Ptc_p_Ptc_a_Smo_p_Smo_a_Pka_p_Pka_a_Fu_p_Fu_a_SuFu_p_SuFu_a_Cos2_p_Cos2_a);
update_Ci_p_OK := (PCs = PC_c1) & (PC_c1_vars = PC_c1_Wg_p_Wg_a_Fz_p_Fz_a_Dsh_p_Dsh_a_Slp_p_Slp_a_Nkd_p_Nkd_a_Zw3_p_Zw3_a_Arm_p_Arm_a_En_p_En_a_Hh_p_Hh_a_Ci_p_Ci_a_Ciact_p_Ciact_a_Cirep_p_Cirep_a_Ptc_p_Ptc_a_Smo_p_Smo_a_Pka_p_Pka_a_Fu_p_Fu_a_SuFu_p_SuFu_a_Cos2_p_Cos2_a);
update_Ci_a_OK := (PCs = PC_c1) & (PC_c1_vars = PC_c1_Wg_p_Wg_a_Fz_p_Fz_a_Dsh_p_Dsh_a_Slp_p_Slp_a_Nkd_p_Nkd_a_Zw3_p_Zw3_a_Arm_p_Arm_a_En_p_En_a_Hh_p_Hh_a_Ci_p_Ci_a_Ciact_p_Ciact_a_Cirep_p_Cirep_a_Ptc_p_Ptc_a_Smo_p_Smo_a_Pka_p_Pka_a_Fu_p_Fu_a_SuFu_p_SuFu_a_Cos2_p_Cos2_a);
update_Ciact_p_OK := (PCs = PC_c1) & (PC_c1_vars = PC_c1_Wg_p_Wg_a_Fz_p_Fz_a_Dsh_p_Dsh_a_Slp_p_Slp_a_Nkd_p_Nkd_a_Zw3_p_Zw3_a_Arm_p_Arm_a_En_p_En_a_Hh_p_Hh_a_Ci_p_Ci_a_Ciact_p_Ciact_a_Cirep_p_Cirep_a_Ptc_p_Ptc_a_Smo_p_Smo_a_Pka_p_Pka_a_Fu_p_Fu_a_SuFu_p_SuFu_a_Cos2_p_Cos2_a);
update_Ciact_a_OK := (PCs = PC_c1) & (PC_c1_vars = PC_c1_Wg_p_Wg_a_Fz_p_Fz_a_Dsh_p_Dsh_a_Slp_p_Slp_a_Nkd_p_Nkd_a_Zw3_p_Zw3_a_Arm_p_Arm_a_En_p_En_a_Hh_p_Hh_a_Ci_p_Ci_a_Ciact_p_Ciact_a_Cirep_p_Cirep_a_Ptc_p_Ptc_a_Smo_p_Smo_a_Pka_p_Pka_a_Fu_p_Fu_a_SuFu_p_SuFu_a_Cos2_p_Cos2_a);
update_Cirep_p_OK := (PCs = PC_c1) & (PC_c1_vars = PC_c1_Wg_p_Wg_a_Fz_p_Fz_a_Dsh_p_Dsh_a_Slp_p_Slp_a_Nkd_p_Nkd_a_Zw3_p_Zw3_a_Arm_p_Arm_a_En_p_En_a_Hh_p_Hh_a_Ci_p_Ci_a_Ciact_p_Ciact_a_Cirep_p_Cirep_a_Ptc_p_Ptc_a_Smo_p_Smo_a_Pka_p_Pka_a_Fu_p_Fu_a_SuFu_p_SuFu_a_Cos2_p_Cos2_a);
update_Cirep_a_OK := (PCs = PC_c1) & (PC_c1_vars = PC_c1_Wg_p_Wg_a_Fz_p_Fz_a_Dsh_p_Dsh_a_Slp_p_Slp_a_Nkd_p_Nkd_a_Zw3_p_Zw3_a_Arm_p_Arm_a_En_p_En_a_Hh_p_Hh_a_Ci_p_Ci_a_Ciact_p_Ciact_a_Cirep_p_Cirep_a_Ptc_p_Ptc_a_Smo_p_Smo_a_Pka_p_Pka_a_Fu_p_Fu_a_SuFu_p_SuFu_a_Cos2_p_Cos2_a);
update_Ptc_p_OK := (PCs = PC_c1) & (PC_c1_vars = PC_c1_Wg_p_Wg_a_Fz_p_Fz_a_Dsh_p_Dsh_a_Slp_p_Slp_a_Nkd_p_Nkd_a_Zw3_p_Zw3_a_Arm_p_Arm_a_En_p_En_a_Hh_p_Hh_a_Ci_p_Ci_a_Ciact_p_Ciact_a_Cirep_p_Cirep_a_Ptc_p_Ptc_a_Smo_p_Smo_a_Pka_p_Pka_a_Fu_p_Fu_a_SuFu_p_SuFu_a_Cos2_p_Cos2_a);
update_Ptc_a_OK := (PCs = PC_c1) & (PC_c1_vars = PC_c1_Wg_p_Wg_a_Fz_p_Fz_a_Dsh_p_Dsh_a_Slp_p_Slp_a_Nkd_p_Nkd_a_Zw3_p_Zw3_a_Arm_p_Arm_a_En_p_En_a_Hh_p_Hh_a_Ci_p_Ci_a_Ciact_p_Ciact_a_Cirep_p_Cirep_a_Ptc_p_Ptc_a_Smo_p_Smo_a_Pka_p_Pka_a_Fu_p_Fu_a_SuFu_p_SuFu_a_Cos2_p_Cos2_a);
update_Smo_p_OK := (PCs = PC_c1) & (PC_c1_vars = PC_c1_Wg_p_Wg_a_Fz_p_Fz_a_Dsh_p_Dsh_a_Slp_p_Slp_a_Nkd_p_Nkd_a_Zw3_p_Zw3_a_Arm_p_Arm_a_En_p_En_a_Hh_p_Hh_a_Ci_p_Ci_a_Ciact_p_Ciact_a_Cirep_p_Cirep_a_Ptc_p_Ptc_a_Smo_p_Smo_a_Pka_p_Pka_a_Fu_p_Fu_a_SuFu_p_SuFu_a_Cos2_p_Cos2_a);
update_Smo_a_OK := (PCs = PC_c1) & (PC_c1_vars = PC_c1_Wg_p_Wg_a_Fz_p_Fz_a_Dsh_p_Dsh_a_Slp_p_Slp_a_Nkd_p_Nkd_a_Zw3_p_Zw3_a_Arm_p_Arm_a_En_p_En_a_Hh_p_Hh_a_Ci_p_Ci_a_Ciact_p_Ciact_a_Cirep_p_Cirep_a_Ptc_p_Ptc_a_Smo_p_Smo_a_Pka_p_Pka_a_Fu_p_Fu_a_SuFu_p_SuFu_a_Cos2_p_Cos2_a);
update_Pka_p_OK := (PCs = PC_c1) & (PC_c1_vars = PC_c1_Wg_p_Wg_a_Fz_p_Fz_a_Dsh_p_Dsh_a_Slp_p_Slp_a_Nkd_p_Nkd_a_Zw3_p_Zw3_a_Arm_p_Arm_a_En_p_En_a_Hh_p_Hh_a_Ci_p_Ci_a_Ciact_p_Ciact_a_Cirep_p_Cirep_a_Ptc_p_Ptc_a_Smo_p_Smo_a_Pka_p_Pka_a_Fu_p_Fu_a_SuFu_p_SuFu_a_Cos2_p_Cos2_a);
update_Pka_a_OK := (PCs = PC_c1) & (PC_c1_vars = PC_c1_Wg_p_Wg_a_Fz_p_Fz_a_Dsh_p_Dsh_a_Slp_p_Slp_a_Nkd_p_Nkd_a_Zw3_p_Zw3_a_Arm_p_Arm_a_En_p_En_a_Hh_p_Hh_a_Ci_p_Ci_a_Ciact_p_Ciact_a_Cirep_p_Cirep_a_Ptc_p_Ptc_a_Smo_p_Smo_a_Pka_p_Pka_a_Fu_p_Fu_a_SuFu_p_SuFu_a_Cos2_p_Cos2_a);
update_Fu_p_OK := (PCs = PC_c1) & (PC_c1_vars = PC_c1_Wg_p_Wg_a_Fz_p_Fz_a_Dsh_p_Dsh_a_Slp_p_Slp_a_Nkd_p_Nkd_a_Zw3_p_Zw3_a_Arm_p_Arm_a_En_p_En_a_Hh_p_Hh_a_Ci_p_Ci_a_Ciact_p_Ciact_a_Cirep_p_Cirep_a_Ptc_p_Ptc_a_Smo_p_Smo_a_Pka_p_Pka_a_Fu_p_Fu_a_SuFu_p_SuFu_a_Cos2_p_Cos2_a);
update_Fu_a_OK := (PCs = PC_c1) & (PC_c1_vars = PC_c1_Wg_p_Wg_a_Fz_p_Fz_a_Dsh_p_Dsh_a_Slp_p_Slp_a_Nkd_p_Nkd_a_Zw3_p_Zw3_a_Arm_p_Arm_a_En_p_En_a_Hh_p_Hh_a_Ci_p_Ci_a_Ciact_p_Ciact_a_Cirep_p_Cirep_a_Ptc_p_Ptc_a_Smo_p_Smo_a_Pka_p_Pka_a_Fu_p_Fu_a_SuFu_p_SuFu_a_Cos2_p_Cos2_a);
update_SuFu_p_OK := (PCs = PC_c1) & (PC_c1_vars = PC_c1_Wg_p_Wg_a_Fz_p_Fz_a_Dsh_p_Dsh_a_Slp_p_Slp_a_Nkd_p_Nkd_a_Zw3_p_Zw3_a_Arm_p_Arm_a_En_p_En_a_Hh_p_Hh_a_Ci_p_Ci_a_Ciact_p_Ciact_a_Cirep_p_Cirep_a_Ptc_p_Ptc_a_Smo_p_Smo_a_Pka_p_Pka_a_Fu_p_Fu_a_SuFu_p_SuFu_a_Cos2_p_Cos2_a);
update_SuFu_a_OK := (PCs = PC_c1) & (PC_c1_vars = PC_c1_Wg_p_Wg_a_Fz_p_Fz_a_Dsh_p_Dsh_a_Slp_p_Slp_a_Nkd_p_Nkd_a_Zw3_p_Zw3_a_Arm_p_Arm_a_En_p_En_a_Hh_p_Hh_a_Ci_p_Ci_a_Ciact_p_Ciact_a_Cirep_p_Cirep_a_Ptc_p_Ptc_a_Smo_p_Smo_a_Pka_p_Pka_a_Fu_p_Fu_a_SuFu_p_SuFu_a_Cos2_p_Cos2_a);
update_Cos2_p_OK := (PCs = PC_c1) & (PC_c1_vars = PC_c1_Wg_p_Wg_a_Fz_p_Fz_a_Dsh_p_Dsh_a_Slp_p_Slp_a_Nkd_p_Nkd_a_Zw3_p_Zw3_a_Arm_p_Arm_a_En_p_En_a_Hh_p_Hh_a_Ci_p_Ci_a_Ciact_p_Ciact_a_Cirep_p_Cirep_a_Ptc_p_Ptc_a_Smo_p_Smo_a_Pka_p_Pka_a_Fu_p_Fu_a_SuFu_p_SuFu_a_Cos2_p_Cos2_a);
update_Cos2_a_OK := (PCs = PC_c1) & (PC_c1_vars = PC_c1_Wg_p_Wg_a_Fz_p_Fz_a_Dsh_p_Dsh_a_Slp_p_Slp_a_Nkd_p_Nkd_a_Zw3_p_Zw3_a_Arm_p_Arm_a_En_p_En_a_Hh_p_Hh_a_Ci_p_Ci_a_Ciact_p_Ciact_a_Cirep_p_Cirep_a_Ptc_p_Ptc_a_Smo_p_Smo_a_Pka_p_Pka_a_Fu_p_Fu_a_SuFu_p_SuFu_a_Cos2_p_Cos2_a);

-- DISCLAIMER: There are no INput nor OUTput variables in the weak/strong stable states description
stableStates := weakSS | strongSS;

-- ATTENTION: This export does not include the stable states enumeration
weakSS := FALSE;
strongSS := FALSE;

-- Declaration of output variables
-- Empty !

-- Authorized NuSMV transitions
TRANS
next(Wg_p) != Wg_p |
next(Wg_a) != Wg_a |
next(Fz_p) != Fz_p |
next(Fz_a) != Fz_a |
next(Dsh_p) != Dsh_p |
next(Dsh_a) != Dsh_a |
next(Slp_p) != Slp_p |
next(Slp_a) != Slp_a |
next(Nkd_p) != Nkd_p |
next(Nkd_a) != Nkd_a |
next(Zw3_p) != Zw3_p |
next(Zw3_a) != Zw3_a |
next(Arm_p) != Arm_p |
next(Arm_a) != Arm_a |
next(En_p) != En_p |
next(En_a) != En_a |
next(Hh_p) != Hh_p |
next(Hh_a) != Hh_a |
next(Ci_p) != Ci_p |
next(Ci_a) != Ci_a |
next(Ciact_p) != Ciact_p |
next(Ciact_a) != Ciact_a |
next(Cirep_p) != Cirep_p |
next(Cirep_a) != Cirep_a |
next(Ptc_p) != Ptc_p |
next(Ptc_a) != Ptc_a |
next(Smo_p) != Smo_p |
next(Smo_a) != Smo_a |
next(Pka_p) != Pka_p |
next(Pka_a) != Pka_a |
next(Fu_p) != Fu_p |
next(Fu_a) != Fu_a |
next(SuFu_p) != SuFu_p |
next(SuFu_a) != SuFu_a |
next(Cos2_p) != Cos2_p |
next(Cos2_a) != Cos2_a |
(Wg_p_std & Wg_a_std & Fz_p_std & Fz_a_std & Dsh_p_std & Dsh_a_std & Slp_p_std & Slp_a_std & Nkd_p_std & Nkd_a_std & Zw3_p_std & Zw3_a_std & Arm_p_std & Arm_a_std & En_p_std & En_a_std & Hh_p_std & Hh_a_std & Ci_p_std & Ci_a_std & Ciact_p_std & Ciact_a_std & Cirep_p_std & Cirep_a_std & Ptc_p_std & Ptc_a_std & Smo_p_std & Smo_a_std & Pka_p_std & Pka_a_std & Fu_p_std & Fu_a_std & SuFu_p_std & SuFu_a_std & Cos2_p_std & Cos2_a_std); -- or it is a steady state

DEFINE
-- Declaration of core variables restriction list
-- Empty !

-- Declaration of input variables restriction list
-- Empty !

--------------------------------------------------
-- Reachability Properties using VARYING INPUTS --
-- i.e. there is NO CONTROL on the input change at each transition
--
-- EXAMPLES --
-- 1. Between an initial state (pattern) and a stable state (pattern)
--   a. Existence of at least one path connecting two state patterns
-- INIT initState;
-- SPEC EF ( stableState );
--   b. Existence of all the paths connecting two state patterns
-- INIT initState;
-- SPEC AF ( stableState );
--
-- 2. Between all the weak/strong stable states
-- INIT weakSS1;
--  SPEC EF ( weakSS2 );
--  ...
--  SPEC EF ( weakSSn );
--------------------------------------------------
-- Reachability Properties using FIXED INPUTS --
-- i.e. a VALUE RESTRICTION can be forced at each transition
-- 
-- 1. Between an initial state (pattern) and a stable state (pattern)
--   a. Existence of at least one path connecting two state patterns
-- INIT initState; SPEC EAF ( inpVar1=0 & inpVar3=1 )( stableState );
--   b. Existence of all the paths
-- INIT initState; SPEC AAF ( inpVar1=0 & inpVar3=1 )( stableState );
--
-- 2. Testing input combinations
-- INIT weakSS1;
--  SPEC EAF ( inpVar1=0 & inpVar2=0 )( weakSS2 );
--  SPEC EAF ( inpVar1=0 & inpVar2=1 )( weakSS2 );
--  SPEC EAF ( inpVar1=1 & inpVar2=0 )( weakSS2 );
--  SPEC EAF ( inpVar1=1 & inpVar2=1 )( weakSS2 );
--  ...
