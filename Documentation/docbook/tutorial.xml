<?xml version="1.0"?>
<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN"
    "http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd">
<article lang="en-GB">
  <?dbhtml dir="tutorial"?>
  <articleinfo>
    <title>GINsim tutorial (DRAFT)</title>
    <bibliomisc>Web : http://gin.univ-mrs.fr/GINsim/</bibliomisc>
  </articleinfo>
  <!-- ############################################ -->
  <section>
    <title>Introduction</title>
		<section>
			<title>About GINsim</title>
    <para>GINsim is a tool supporting the definition, the simulation and the analysis of regulatory graphs, based on a <emphasis role="strong">multilevel logical formalism</emphasis>. This formalism leans on the definition of two types of graphs: 
    <emphasis role="strong">regulatory graphs</emphasis> which model regulatory networks, and 
    <emphasis role="strong">state transition graphs</emphasis> which represent the dynamical behaviours, for given initial state(s) and under some updating assumptions.</para>
			</section>
		<section>
			<title>Availability</title>
			<para>GINsim is freely available, under the terms of the <emphasis>General Public License</emphasis>. The GINsim website (<ulink url="http://gin.univ-mrs.fr/GINsim"/>) contains up to date informations, along with the latest official version of GINsim and of this documentation. To get started with GINsim, download the  .jar file from the website and launch it (either by double-click or with the command <emphasis>java -jar GINsim-$version.jar</emphasis></para>
			</section>
		<section>
			<title>Overview of this tutorial</title>
			<para> This short tutorial introduces the main steps to get started on using GINsim:
			<itemizedlist>
				<listitem>the specification of a regulatory graph, illustrated through a simple model of the lysis-lysogeny decision in the phage lambda,</listitem>
				<listitem> the simulation of this model (i.e the construction of the state transition graph),</listitem>
				<listitem> the use of some of the available analysis tools.</listitem>
		  </itemizedlist>
		</para>
    <para>Please see the <olink targetdoc="userManual">GINsim user manual</olink> for more detailed information.</para>
    <figure id="sc_mainWindow">
      <title>Main window of GINsim</title>
      <graphic fileref="../figures/mainWindow.png" />
			The main window of GINsim, featuring an empty model.
		</figure>
			</section>
    <bibliography>
      <title>References</title>
			<bibliodiv>
				<title>Publications</title>
      <biblioentry>
        <authorgroup>
          <author><firstname>Claudine</firstname><surname>Chaouiya</surname></author>
          <author><firstname>Elisabeth</firstname><surname>Remy</surname></author>
          <author><firstname>Brigitte</firstname><surname>Mossé</surname></author>
          <author><firstname>Denis</firstname><surname>Thieffry</surname></author>
        </authorgroup>
        <title>Qualitative analysis of regulatory graphs: a computational tool based on a discrete formal framework</title>
        <publisher>Lectures Notes in Control and Information Sciences</publisher>
        <volumenum>294</volumenum>
        <pagenums>119-126</pagenums>
        <pubdate>2003</pubdate>
      </biblioentry>
      <biblioentry>
        <authorgroup>
          <author><firstname>Aitor</firstname><surname>Gonzalez Gonzalez</surname></author>
          <author><firstname>Aurélien</firstname><surname>Naldi</surname></author>
          <author><firstname>Lucas</firstname><surname>Sanchez</surname></author>
          <author><firstname>Denis</firstname><surname>Thieffry</surname></author>
          <author><firstname>Claudine</firstname><surname>Chaouiya</surname></author>
        </authorgroup>
        <title>GINsim: a software suite for the qualitative modelling, simulation and analysis of regulatory networks</title>
        <publisher>Biosystems</publisher>
        <volumenum>84</volumenum>
        <pagenums>91-100</pagenums>
        <pubdate>2006</pubdate>
				<biblioid class="doi">doi:10.1016/j.biosystems.2005.10.003</biblioid>
      </biblioentry>
				</bibliodiv>
			<bibliodiv>
				<title>Website</title>
					<para><ulink url="http://gin.univ-mrs.fr/GINsim"/></para>
				</bibliodiv>
    </bibliography>
  </section>
		<!-- ############################################ -->
  <section>
    <?dbhtml filename="defRegNetwork.html"?>
    <title>Defining a regulatory network model</title>
		<para>In the logical formalism, a regulatory network is modelled as a <emphasis role="strong">regulatory graph</emphasis>. In this graph, nodes represent genes or regulatory products, and arcs represent interactions between genes. Modelling attributes define the dynamical behaviours.</para>
		<para>GINsim allows to define interactively such models through a dedicated graphical interface. A graph editor allows the addition/removal of genes and interactions. Then, the property panel on the bottom of the main GINsim window enables the specification of the modelling attributes.</para>
    <section>
    <title>Drawing the regulatory graph</title>
    <para>The first step for the definition of a regulatory model, is the definition of the graph per se. Genes and interactions can be interactively added, selected, moved or deleted, depending of the current editing mode. This editing mode can be changed using the edit menu or the toolbar buttons.</para>
			<informaltable>
	        <tgroup cols="2">
          <colspec colname="c1" />
          <colspec colname="c2" />
					<thead>
						<row>
							<entry namest="c1" nameend="c2">Available editing modes:</entry>
						</row>
						</thead>
				<tbody>
					<row><entry><inlinegraphic fileref="../figures/buttons/editmode.gif" /></entry>
					<entry>Default editing mode, allows to select and move objects.</entry></row>
					<row><entry><inlinegraphic fileref="../figures/buttons/insertsquare.gif" /></entry>
						<entry>Gene insertion mode, when selected, clicking on the graph panel adds a new gene.</entry></row>
					<row>
						<entry>
							<inlinegraphic fileref="../figures/buttons/insertpositiveedge.gif" />
							<inlinegraphic fileref="../figures/buttons/insertnegativeedge.gif" />
							<inlinegraphic fileref="../figures/buttons/insertunknownedge.gif" />
						</entry>
					  <entry>Interaction insertion mode, when selected, interactions are added by dragging from one gene to another. The three buttons allow to add different kinds of interactions: activation, inhibitions or undefined. This is only a visual hint, the real effect of interactions is defined by logical parameters (see below).</entry>
				</row>
				</tbody>
					</tgroup>
			</informaltable>
    <figure id="toolbar" xreflabel="edit toolbar">
      <title>Graph editing buttons in the toolbar</title>
      <graphic fileref="../figures/editingButtons.png" />
			GINsim has several editing modes, available in the edit menu but also in the main toolbar. The pushed button reflects the current mode.
    </figure>
    <tip>The selection of non-default editing modes is transient by default: once the action has been performed, GINsim switches back to the default mode (E). GINsim can be locked in any mode by double-clicking on the corresponding toolbar button.</tip>
    <para>Let us take the example of a simple model of the lysis-lysogeny decision in the phage lambda. This tutorial focuses on the definition and the simulation of the model in GINsim. A more complete description of the model is available, along with a GINsim model definition file, in the <ulink url="http://gin.univ-mrs.fr/GINsim/repository.html"> model repository</ulink>. This model, involving 4 genes, is called "lambda4".
			</para>
    <figure>
      <title>The lambda4 model</title>
      <graphic id="phage4Model" fileref="../figures/phage4.png" />
      <ulink url="javascript:show('phage4Model')">Show  animation</ulink>
			<para>This GINsim window shows the four actors of the model and their interactions (blunt arrows stand for inhibitory effects, normal ones for activations).</para>
    </figure>
		</section>
    <section>
      <title>Entering parameters for genes and interactions</title>
      <para>Each gene has a maximal and a basal expression levels. The basal level corresponds to the situation where no incoming interaction is active. For this model, the values are listed in <xref linkend="table_maxbasal" xrefstyle="select:label"/>.
      <table id="table_maxbasal">
					<title>Genes and their expression levels</title>
        <tgroup cols="3">
          <colspec colname="c1" />
          <colspec colname="c2" />
          <colspec colname="c3" />
					<thead>
            <row>
              <entry>Gene</entry><entry>Maximal</entry><entry>Basal</entry>
            </row>
					</thead>
          <tbody>
            <row>
              <entry>Cro</entry><entry>3</entry><entry>3</entry>
            </row>
            <row>
              <entry>C1</entry><entry>2</entry><entry>2</entry>
            </row>
            <row>
              <entry>C2</entry><entry>1</entry><entry>0</entry>
            </row>
            <row>
              <entry>N</entry><entry>1</entry><entry>1</entry>
            </row>
          </tbody>
        </tgroup>
					Lists of all genes in the lambda4 model, with their maximal and basal expression levels.
      </table>
				 GINsim assigns to newly created genes a default maximal level of 1 and a basal level of 0. To change these values for a given gene, one needs to select the gene, these values can then be specified through the <emphasis>modelling attributes</emphasis> tab in the bottom panel, as shown in <xref linkend="fig_geneConfig" xrefstyle="select:label"/>.
			</para>
      <figure id="fig_geneConfig">
        <title>Specification of maximal and basal levels for Cro</title>
        <graphic fileref="../figures/geneConfig.png" />
				When a gene is selected, the <emphasis>modelling attributes</emphasis> tab of the bottom panel allows to edit properties of this gene. Name (optional), Id (uniq identifier) and expression levels can be edited in the left part, while the right part is dedicated to the logical parameters (see below).  
      </figure>
			<para>Interactions are active for a given range of activity levels of their source. The next step consists in defining these ranges for each interaction, whenever necessary (per default, the interval is set to [1-max], where "max" is the maximal expression level of the source). For the selected interaction, these values can be specified through the <emphasis>modelling attributes</emphasis> area (see <xref linkend="fig_edgeConfig" xrefstyle="select:label"/>). The <xref linkend="tab_interaction" xrefstyle="select:label"/> lists interactions between genes of the lambda4 model.
      <table id="tab_interaction">
					<title>Interactions and their activity ranges</title>
        <tgroup cols="3">
          <colspec colname="c1" />
          <colspec colname="c2" />
          <colspec colname="c3" />
          <thead>
            <row>
              <entry>Source</entry><entry>Target</entry><entry>Range</entry>
						</row>
					</thead>
					<tbody>
            <row>
              <entry>Cro</entry><entry>Cro</entry><entry>[3,Max]</entry>
            </row>
            <row>
              <entry>Cro</entry><entry>C1</entry><entry>[1,Max]</entry>
            </row>
            <row>
              <entry>Cro</entry><entry>C2</entry><entry>[1,Max]</entry>
            </row>
            <row>
              <entry>Cro</entry><entry>N</entry><entry>[2,Max]</entry>
            </row>
            <row>
              <entry>C1</entry><entry>Cro</entry><entry>[2,Max]</entry>
            </row>
            <row>
              <entry>C1</entry><entry>C1</entry><entry>[2,Max]</entry>
            </row>
            <row>
              <entry>C1</entry><entry>C2</entry><entry>[2,Max]</entry>
            </row>
            <row>
              <entry>C1</entry><entry>N</entry><entry>[1,Max]</entry>
            </row>
            <row>
              <entry>C2</entry><entry>C1</entry><entry>[1,Max]</entry>
            </row>
            <row>
              <entry>N</entry><entry>C2</entry><entry>[1,Max]</entry>
            </row>
          </tbody>
        </tgroup>
					List of all interactions in the lambda4 model. Each interaction has a source and a target gene. An interaction is active for a given range of activity levels of its source gene, as specified in the last column.
      </table>
      <figure id="fig_edgeConfig">
      <title>Specification of the interval associated with the Cro-N interaction</title>
      <graphic fileref="../figures/interactionConfig.png" />
					When an interaction is selected, the <emphasis>modelling attributes</emphasis> tab of the bottom panel allows to edit its properties.
					<note>In the non-boolean case, a gene can have several distinct effects on another one, depending on its activity level. In this case, only one arc is drawn and all distinct effects appear in the left part of this configuration panel.</note>
				</figure>
			</para>
    </section>
    <section id="sec_logParameters">
      <title>Editing Logical Parameters</title>
			<para>Logical parameters are attached to each gene, to describe its dynamical behaviour. Each logical parameter is defined as a set of incoming interactions and a target value. It denotes that, during the simulation, when<itemizedlist> 
				<listitem>the specified incoming interactions are all active (i.e. the expression level of their source genes are in the related activity ranges),</listitem>
					<listitem>and none of the other incoming interactions is active,</listitem>
				</itemizedlist> then the expression level of the considered gene tends toward the value attached to the logical parameter.</para>
      <para role="newline">Per default, all parameters are considered to be zero.
      Consequently, only the non-zero parameters have to be explicitly defined (listed in <xref linkend="tab_nzparam" xrefstyle="select:label"/> for the lambda4 model) .</para>
      <table id="tab_nzparam">
				<title>Non-zero logical parameters</title>
        <tgroup cols="3">
          <colspec colname="c1" />
          <colspec colname="c2" />
          <colspec colname="c3" />
          <thead>
            <row>
              <entry>Gene</entry><entry>active interactions</entry><entry>target value</entry>
            </row>
						</thead>
					<tbody>
						<row>
							<entry>Cro</entry><entry >Cro</entry><entry>2</entry>
            </row>
            <row>
              <entry morerows="2">C1</entry><entry>C1</entry><entry>2</entry>
            </row>
            <row>
              <entry colname="c2">C2</entry><entry>2</entry>
            </row>
            <row>
              <entry colname="c2">C1,C2</entry><entry>2</entry>
            </row>
            <row>
              <entry>C2</entry><entry>N</entry><entry>1</entry>
            </row>
          </tbody>
        </tgroup>
      </table>
	      <para>When a gene is selected the main part of the <emphasis>modelling attributes</emphasis> tab enables the definition of the logical parameters, as shown in <xref linkend="fig_defLogParam" xrefstyle="select:label"/>.</para>
			<para>The <emphasis>modelling attributes</emphasis> panel is divided in three parts: <itemizedlist>
					<listitem>On the left, a table lists all defined logical parameters, showing their target value and list of interactions.</listitem>
					<listitem>On the right, the list of all incoming interactions on the selected gene.</listitem>
					<listitem>The central part contains the following buttons:<itemizedlist>
							<listitem>"&lt;&lt;" assigns the set of selected incoming interactions (from the right list) to the selected logical parameter.</listitem>
							<listitem>"X" deletes the selected logical parameter,</listitem>
							<listitem>up and down arrows reorder the selected logical parameters.</listitem>
						</itemizedlist></listitem>
				</itemizedlist></para>
      <figure id="fig_defLogParam">
        <title>Definition of non zero parameters for C1</title>
        <graphic id="logPara" fileref="../figures/configuredInteraction.png" />
				<ulink url="javascript:show('logPara')">Show animation</ulink>
      </figure>
    </section>
		<section>
			<title>Saving the graph</title>
			<para>The <emphasis>File</emphasis> menu contains the classical actions allowing to save, open or export files. GINsim uses a dedicated XML based format: <ulink url="http://gin.univ-mrs.fr/GINsim/ginml.html">GINML</ulink>.</para>
			<para>The save dialog box offers to choose the saved graphical attributes. The default is to save all graphical attributes. Otherwise,  the sole structure of the graph or only the position of genes can be saved (see <xref linkend="fig_saveDialog" xrefstyle="select:label"/>) .</para>
			 <figure id="fig_saveDialog">
        <title>The save dialog box</title>
        <graphic fileref="../figures/saving.png" />
				GINsim uses the default java save dialog box, allowing to browse and create folders. By default, only folders and GINML files are shown. Saving requires to choose the name of the file.
    </figure>
		</section>
  </section>
		<!-- ############################################ -->
  <section><?dbhtml filename="simulation.html"?>
  <title>Running a simulation</title>
  <para>Once a regulatory model has been defined, a simulation can be launched through the option "run simulation" in the "Action" menu.</para> 
  <para>The simulation computes a <emphasis>state transition graph</emphasis>, representing the dynamical behaviour of the model. The nodes of this graph, also called <emphasis>states</emphasis> of the system, are vectors giving the expression levels of all genes of the model.</para>
<!--  <para>Considering a given state, <emphasis>logical parameters</emphasis> are used to compute the <emphasis>target expression level</emphasis> of each gene. If this value is different from the current expression level, the gene is calling for an update.<itemizedlist>
  <listitem>When none of the gene is calling for update, the state is stable and the simulation ends,</listitem>
  <listitem>when a single call for update is present, the next state of the system is obtained by copying the current state and increasing or decreasing the expression level of the changing gene by one,</listitem>
  <listitem>when several call for update are available, one or several following states will be generated, depending on the construction strategy.</listitem>
  </itemizedlist></para>
-->
<para>At a given state, a speciﬁc logical parameter can be associated with each component. If the value of this parameter is smaller or greater than that of the concentration/activity level of the corresponding component, this level will tend to decrease or increase, respectively. Otherwise (when the parameter value and the corresponding component level are equal), the component will tend to keep its current value.</para>
  <para>This involves the selection of a <xref linkend="updating" /> for the construction of the state transition graph as well as the specification of the <xref linkend="initStates" /> and of some, optional, size constraints (not detailled here).</para>
  <figure id="fig_configSimulation">
    <title>Dialog box to configure the simulation</title>
    <graphic fileref="../figures/simulation_config.png" />
  </figure>

		<section id="initStates" xreflabel="initial state(s)">
    <title>Initial state(s)</title>
    <para>The right part of the dialog box is dedicated to the selection of the initial states of the simulation. The simulation will start with each of these initial states, unless they have already been reached by a previous simulation (i.e. from another initial states).</para>
			<para>The simulation can consider all possible states as initial states (resulting to the <emphasis>full</emphasis> state transition graph), or use only a specific subset, defined in the table. Each line of this table describes one or several initial states, by mean of a set of allowed values for each gene of the system. Allowed values for a gene are semicolon separated, and ranges can be represented with a dash: "0-2;4" denotes "all values between 0 and 2, and 4" i.e. "0, 1, 2 and 4". All initial states matching these allowed values will be used during the simulation.</para>
			<para>The example in <xref linkend="fig_configSimulation" xrefstyle="select:label"/> describes all states where C1 is not expressed while Cro is. Only 1 value is allowed for C1, 3 for Cro and 2 for C2 and N, leading to 12 initial states.</para>
  </section>

  <section id="updating" xreflabel="strategy">
    <title>Construction strategy</title>
    <para>When several genes are called to update their expression levels at the same time, several strategies can be applied. In GINsim, the following construction strategies are implemented: 
    <itemizedlist>
      <listitem>Synchronous: all the updating calls are
      executed simultaneously. This strategy is generally
      considered unrealistic, but it is still useful in some cases.</listitem>
      <listitem>Asynchronous: only one updating call is executed at
      each step, but all possible trajectories are generated in the
      resulting state transition graph. This is the default
      strategy. The synchronicity trap is avoided, at the expense
      of generating all concurrent paths. The resulting state
      transition graph is more realistics, but may contain unrealistic
      path and thus needs to be further studied.</listitem>
      <listitem>By priority classes: mixed mode where updating calls are grouped in priority classes. This mode is detailed below.</listitem>
    </itemizedlist>
    <note>Stable (steady) states are conserved whatever the selected updating assumption. However, their reachability may change.</note>
    <figure id="syncvsasync">
      <title>Construction strategy: synchronous versus asynchronous</title>
      <graphic fileref="../figures/a-sync.png" />
      Samples of simulation results for the lambda4 model, applying synchronous and asynchronous strategies to the same initial states (all states where C1=0 and Cro&gt;0). Dotted arcs denotes that several transitions are triggered simultaneously.
    </figure></para>
			<section>
				<title>Priority class</title>
				<para>This strategy allows the user to group components into different classes, and to assign a priority
level to each of these classes. In case of concurrent transition calls, GINsim ﬁrst updates the gene(s) belonging to the class with the highest ranking. For each regulatory component class, the user can further specify the desired updating assumption, which then deter- mines the treatment of concurrent transition calls inside that class. When several classes have the same ranking, concurrent transitions are treated under an asynchronous assumption (no priority).</para>
<!--				
				<para>The priority class mode allows to group state transition into priority classes. This simulation mode enables to build more complex simulation rules. Each class has its own mode (synchronous or asynchronous) and a rank. The simulation works as follow:
        <itemizedlist>
            <listitem>search for the first changing gene, in each class starting with the first one (the highest ranked one, on top of the list),</listitem>
            <listitem>if none if found, the state is stable,</listitem>
            <listitem>if one is found, search for other changes with compatible priority: in the same class and in the next(s) one if they have been grouped,</listitem>
						<listitem>apply changes inside the same class according to the mode of the class, changes belonging to grouped class are applied asynchronously.</listitem>
        </itemizedlist>
				</para>
-->
					<para>By default, all transitions belong to the same asynchronous class, running the simulation without further configuration is thus the same as using the asynchronous assumption.</para>
				<para>The left part of the configuration dialog box shows a list of priority classes (see <xref linkend="fig_pclass" xrefstyle="select:label"/>). The name of a class can be edited and a checkbox allows to change its internal mode from asynchronous (unchecked) to synchronous (checked). Buttons enable to add (+), delete (X), order (using the arrows) and group/ungroup (G) them.</para>
		<para>The central column lists transitions that belong to the currently selected class and the column on the right lists all other transitions (belonging to other classes). To add transitions to the selected class, select these transition in the right list an click on the "&lt;&lt;" button. The "&gt;&gt;" button removes the transition selected in the central list from the current class (and add them to the first class of the list).</para>
		<para>Finally, a choice list on the bottom left, allows to apply some predefined settings.</para>
			<figure id="fig_pclass">
					<title>Priority classes</title>
					<graphic id="pclass" fileref="../figures/priorityClass.png"/>
					<ulink url="javascript:show('pclass')">Show animation</ulink>
					<graphic fileref="../figures/dyn_pclass.png"/>
		  </figure>
		</section>
  </section>

		<section>
      <title>Transition blocking</title>
			<para>Blocking transition is putting some restrictions on the evolution of the expression level of genes. The <emphasis>transition blocking</emphasis> button opens a dialog box, allowing to specify minimal and maximal expression level for each gene.</para>
      <para>Transition blocking is especially useful to simulate simple mutations (knockouts or ectopic expression), but more complex mutants can not yet be simulated without modifying the model.</para>
      <figure id="refscreenshot14">
        <title>Transitions blocking</title>
          <graphic fileref="../figures/blocking.png"/>
          <graphic fileref="../figures/dynamic_async_blocked.png"/>
				Result of an asynchronous simulation, where the expression level for Cro has been blocked at 1. The state transition graph is the same as the original asynchronous one, but all transitions where Cro leaves this value have been suppressed. This state transition graph is now composed of two non-connected parts, and a new stable state appeared.
      </figure>
      <para></para>
    </section>

		<section>
		<title>What to do</title>
  		<para>At the end of the simulation, a dialog box provides some informations on the generated state transition graph: size (number of states) and number of stable states. It offers by default to save or display the graph, but also to perform some analysis on it (see <xref linkend="fig_whattodo" xrefstyle="select:label"/>).</para>
  <figure id="fig_whattodo">
    <title>"What to do" dialog box</title>
    <graphic fileref="../figures/whattodo.png" />
  </figure>
  </section>

	</section>
		<!-- ############################################ -->
	<section><?dbhtml filename="analysis.html"?>
		<title>Analysis tools</title>
    <section id="scc">
      <title>Strongly connected component</title>
      <para>GINsim allows to find the graph of the Strongly Connected Components (SCC graph)<footnote>A Strongly connected Component (SCC) in a graph G is a maximal subgraph of G such as for every vertices u and v, it exists a path from u to v.</footnote> of an existing graph. The SCC graph is an acyclic graph based on the original one: each node of the SCC graph is a cycle or a set of intertwined cycles of the original graph, this makes it easier to follow pathways as the resulting graph is shorter and simpler. To compute this graph, use the "SCC graph" action in the "Actions" menu.</para>
      <figure>
      <title>Strongly Connected Components dialogs</title>
       <graphic fileref="../figures/scc.png"/>
       <graphic fileref="../figures/scc_running.png"/>
      </figure>
			<warning>find a better example</warning>
      <figure>
        <title>Strongly Connected Components graph</title>
         <graphic fileref="../figures/sccGraph.png"/>
      Exemple of SCC graph (on the right), next to the original state transition graph.
      </figure>
      <tip>While displaying a SCC graph, the "selection attribute" tab in the bottom panel shows the content of the selected component (i.e. the list of corresponding nodes in the original graph).</tip>
    </section>
    <section>
      <title>Path finder</title>
      <para><phrase id="pathFinder"/>It is often important to find a path between different states of the state transition graph.</para>
      <para>The "search path" action allows to find a path between different states of the state transition graph. Selecting the "search a path" action in the action menu opens the configuration dialog. This dialog allows to specify the starting state, the targeted state , and intermediate states (using the "+" and "X" buttons to add/remove them). While running, the tool performs a shortest path search. If several paths exist between these states, the result will thus be the first shortest path.</para>
			<figure>
      <title>Search for a path in the state transition graph</title>
        <graphic fileref="../figures/search_path.png"/>
      </figure>
    </section>
	</section>
</article>
