<?xml version="1.0"?>
<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN"
	"http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd">
<article lang="en">
	<?dbhtml dir="tutorial"?>
	<articleinfo>
		<title>GINsim tutorial</title>
		<bibliomisc>Web : http://gin.univ-mrs.fr/GINsim/</bibliomisc>
		</articleinfo>
	<!-- ############################################ -->
	<section id="sec_intro">
		<title>Introduction</title>
		<section id="sec_about">
			<title>About GINsim</title>
			<para>GINsim (see [<xref linkend="Chaouiya2003"/>]) is a tool supporting the definition, the simulation and the analysis of regulatory graphs, based on a <emphasis role="strong">multilevel logical formalism</emphasis> (see <xref linkend="tab_interaction"/>). This formalism leans on the definition of two types of graphs: 
				<emphasis role="strong">regulatory graphs</emphasis>, which model regulatory networks, and 
				<emphasis role="strong">state transition graphs</emphasis>, which represent the dynamical behaviours, for given initial state(s) and under some updating assumptions.</para>
			</section>
		<section id="sec_availability">
			<title>Availability</title>
			<para>GINsim 2.3 is freely available for academic users, please contact us for other uses.
			The GINsim website (<ulink url="http://gin.univ-mrs.fr/GINsim"/>) provides the latest official
			version of the software, documentation, as well as a model library.
            To get started with GINsim, download the  .jar file from the website and launch it (either by double-click
            or with the command <emphasis>java -jar GINsim-$version.jar</emphasis>).</para>
		</section>
		<section id="overview">
			<title>Overview of this tutorial</title>
			<para> This short tutorial introduces the main steps to get started with GINsim:
				<itemizedlist>
					<listitem><simpara>the specification of a regulatory graph, illustrated through a simple model of the lysis-lysogeny decision in the phage lambda,</simpara></listitem>
					<listitem><simpara>the simulation of this model (i.e the construction of the state transition graph),</simpara></listitem>
					<listitem><simpara>the use of some of the available analysis tools.</simpara></listitem>
					</itemizedlist>
				</para>
			<para>We refer to the <olink targetdoc="userManual">GINsim user manual</olink> for more detailed information.</para>
			<figure id="sc_mainWindow">
				<title>Main window of GINsim</title>
				<mediaobject>
					<imageobject>
						<imagedata fileref="../figures/mainWindow.png" />
					</imageobject>
					<caption>The main window of GINsim, featuring an empty model.</caption>
				</mediaobject>
			</figure>
		</section>
		</section>
	<!-- ############################################ -->
	<section id="sec_regNetwork">
		<?dbhtml filename="defRegNetwork.html"?>
		<title>Defining a regulatory network model</title>
		<para>In the logical formalism, a regulatory network is modelled as a <emphasis role="strong">regulatory graph</emphasis>. In this graph, nodes represent genes or regulatory products, and arcs represent interactions between genes. Modelling attributes determine the dynamical behaviour of the network.</para>
		<para>GINsim allows to define interactively such models through a dedicated graphical interface. A graph editor allows the addition/removal of genes and interactions. Then, the property panel at the bottom of the main GINsim window enables the specification of the modelling attributes.</para>
		<section id="sec_drawRG">
			<title>Drawing the regulatory graph</title>
			<para>The first step for the definition of a regulatory model, is the definition of the graph <emphasis>per se</emphasis>. Genes and interactions can be interactively added, selected, moved or deleted, depending of the current editing mode. This editing mode can be changed using the edit menu or the toolbar buttons.</para>
			<informaltable>
				<tgroup cols="2">
					<colspec colname="c1" />
					<colspec colname="c2" />
					<thead>
						<row>
							<entry namest="c1" nameend="c2">Available editing modes:</entry>
							</row>
						</thead>
					<tbody>
						<row><entry><inlinegraphic fileref="../figures/buttons/deletemode.gif" /></entry>
							<entry>Deletion option: selected items are deleted.</entry></row>
						<row><entry><inlinegraphic fileref="../figures/buttons/editmode.gif" /></entry>
							<entry>Default editing mode: allows to select and move objects.</entry></row>
						<row><entry><inlinegraphic fileref="../figures/buttons/insertsquare.gif" /></entry>
							<entry>Gene insertion mode: when selected, clicking on the graph panel adds a new gene.</entry></row>
						<row>
							<entry>
								<inlinegraphic fileref="../figures/buttons/insertpositiveedge.gif" />
								<inlinegraphic fileref="../figures/buttons/insertnegativeedge.gif" />
								<inlinegraphic fileref="../figures/buttons/insertunknownedge.gif" />
								</entry>
							<entry>Interaction insertion mode: when selected, interactions are added by dragging from one gene to another. The interactions must be complemented by the definition of the logical parameters for the target variable (see below). The three buttons allow to add different kinds of interactions: activation, inhibition or undefined.</entry></row>
						<row><entry><inlinegraphic fileref="../figures/buttons/custumizeedgerouting.gif" /></entry>
							<entry>Arc modification mode: when selected, intermediate points can be added or removed.</entry></row>
						</tbody>
					</tgroup>
				</informaltable>
			<figure id="toolbar" xreflabel="edit toolbar">
				<title>Graph editing buttons in the toolbar</title>
				<mediaobject>
					<imageobject>
						<imagedata fileref="../figures/editingButtons.png" />
					</imageobject>
					<caption>GINsim has several editing modes, available in the edit menu but also in the main toolbar. The pushed button reflects the current mode.</caption>
				</mediaobject>
			</figure>
			<tip><simpara>The selection of non-default editing modes is transient by default: once an action has been performed, GINsim switches back to the default mode (E). GINsim can be locked in any mode by double-clicking on the corresponding toolbar button.</simpara></tip>
			<para>Let us take the example of a simple model of the lysis-lysogeny decision in the phage lambda. This tutorial focuses on the definition and the simulation of the model in GINsim. A more complete description of the model is available, along with a GINsim model definition file, in the <ulink url="http://gin.univ-mrs.fr/GINsim/repository.html"> model repository</ulink>. This model, involving 4 genes, is called "lambda4".
				</para>
			<figure id="fig_phage4Model">
				<title>The lambda4 model</title>
				<mediaobject id="phage4Model">
					<imageobject>
						<imagedata fileref="../figures/phage4.png" />
					</imageobject>
					<caption>
						<para condition="html"><ulink url="javascript:show('phage4Model')">Show  animation</ulink></para>
						<para>This GINsim window shows the four actors of the model and their interactions (blunt arrows stand for inhibitory effects, normal ones for activations).</para>
					</caption>
				</mediaobject>
			</figure>
		</section>
		<section id="sec_geneParam">
			<title>Entering parameters for genes and interactions</title>
			<para>Each gene has a maximal and a basal expression level. The basal level corresponds to the situation where no incoming interaction is active. For this model, the values are listed in <xref linkend="table_maxbasal" xrefstyle="select:label"/>.
				<table id="table_maxbasal">
					<title>Genes and their expression levels</title>
					<tgroup cols="3">
						<colspec colname="c1" />
						<colspec colname="c2" />
						<colspec colname="c3" />
						<thead>
							<row>
								<entry>Gene</entry><entry>Maximal</entry><entry>Basal</entry>
								</row>
							</thead>
						<tbody>
							<row>
								<entry>Cro</entry><entry>3</entry><entry>3</entry>
								</row>
							<row>
								<entry>C1</entry><entry>2</entry><entry>2</entry>
								</row>
							<row>
								<entry>C2</entry><entry>1</entry><entry>0</entry>
								</row>
							<row>
								<entry>N</entry><entry>1</entry><entry>1</entry>
								</row>
							</tbody>
						</tgroup>
					<simpara>Lists of all genes in the lambda4 model, with their maximal and basal expression levels.</simpara>
				</table>
				GINsim assigns a default maximal level of 1 and a basal level of 0  to newly created genes. To change these values for a given gene, one needs to select the gene and the <emphasis>Modelling Attributes</emphasis> tab in the bottom panel, as shown in <xref linkend="fig_geneConfig" xrefstyle="select:label"/>.
				</para>
			<figure id="fig_geneConfig">
				<title>Specification of maximal and basal levels for Cro</title>
				<mediaobject>
					<imageobject>
						<imagedata fileref="../figures/geneConfig.png" />
					</imageobject>
				<caption><para>When a gene is selected, the <emphasis>Modelling Attributes</emphasis> tab in the bottom panel allows to edit properties of this gene. Name (optional), Id (unique identifier) and expression levels can be edited in the left part, while the right part is dedicated to the edition of logical parameters (see below).</para></caption>
</mediaobject>  
				</figure>
			<para>Interactions operate for a given range of activity levels of their source. The next step consists in defining these ranges for each interaction, whenever necessary (per default, the interval is set to [1, Max], where "Max" is the maximal expression level of the source). For the selected interaction, these values can be specified through the <emphasis>Modelling Attributes</emphasis> area (see <xref linkend="fig_edgeConfig" xrefstyle="select:label"/>). The <xref linkend="tab_interaction" xrefstyle="select:label"/> lists interactions between genes of the lambda4 model.
				<table id="tab_interaction">
					<title>interactions and their activity ranges</title>
					<tgroup cols="3">
						<colspec colname="c1" />
						<colspec colname="c2" />
						<colspec colname="c3" />
					<thead>
						<row>
							<entry>Source</entry><entry>Target</entry><entry>Range</entry>
						</row>
					</thead>
					<tbody>
							<row>
								<entry>Cro</entry><entry>Cro</entry><entry>[3,Max]</entry>
								</row>
							<row>
								<entry>Cro</entry><entry>C1</entry><entry>[1,Max]</entry>
								</row>
							<row>
								<entry>Cro</entry><entry>C2</entry><entry>[1,Max]</entry>
								</row>
							<row>
								<entry>Cro</entry><entry>N</entry><entry>[2,Max]</entry>
								</row>
							<row>
								<entry>C1</entry><entry>Cro</entry><entry>[2,Max]</entry>
								</row>
							<row>
								<entry>C1</entry><entry>C1</entry><entry>[2,Max]</entry>
								</row>
							<row>
								<entry>C1</entry><entry>C2</entry><entry>[2,Max]</entry>
								</row>
							<row>
								<entry>C1</entry><entry>N</entry><entry>[1,Max]</entry>
								</row>
							<row>
								<entry>C2</entry><entry>C1</entry><entry>[1,Max]</entry>
								</row>
							<row>
								<entry>N</entry><entry>C2</entry><entry>[1,Max]</entry>
								</row>
						</tbody>
					</tgroup>
					<simpara>List of all interactions in the lambda4 model. Each interaction has a source and a target gene. An interaction is active for a given range of activity levels of its source gene, as specified in the last column.</simpara>
				</table>
				<figure id="fig_edgeConfig">
					<title>Specification of the interval associated with the Cro-N interaction</title>
					<mediaobject>
						<imageobject>
							<imagedata fileref="../figures/interactionConfig.png" />
						</imageobject>
						<caption><para>When an interaction is selected, its properties can be edited in the <emphasis>Modelling Attributes</emphasis> tab of the bottom panel.
								<note><simpara>In the non-Boolean case, a gene may have several distinct effects on another one, depending on its activity level. In this case, only one arc is drawn, encompassing multiple interactions. The corresponding ranges appear in the left part of this configuration panel.</simpara></note>
							</para></caption>
					</mediaobject>
					</figure>
				</para>
			</section>
		<section id="sec_logParameters">
			<title>Editing Logical Parameters</title>
			<para>Logical parameters are attached to each gene, to describe its dynamical behaviour. Each logical parameter is defined as a set of incoming interactions and a target value. It denotes that, during the simulation, when<itemizedlist> 
					<listitem><simpara>the specified incoming interactions are all active (i.e. the expression levels of their source genes lay in the related activity ranges),</simpara></listitem>
					<listitem><simpara>and none of the other incoming interactions is active,</simpara></listitem>
					</itemizedlist> then the expression level of the considered gene tends toward the value attached to the logical parameter.</para>
			<para role="newline">Per default, all parameters are considered to be zero.
				Consequently, only the non-zero parameters have to be explicitly defined (see <xref linkend="tab_nzparam" xrefstyle="select:label"/> for the lambda4 model) .</para>
			<table id="tab_nzparam">
				<title>Non-zero logical parameters</title>
				<tgroup cols="3">
					<colspec colname="c1" />
					<colspec colname="c2" />
					<colspec colname="c3" />
					<thead>
						<row>
							<entry>Gene</entry><entry>active interactions</entry><entry>target value</entry>
							</row>
						</thead>
					<tbody>
						<row>
							<entry>Cro</entry><entry >Cro</entry><entry>2</entry>
							</row>
						<row>
							<entry morerows="2">C1</entry><entry>C1</entry><entry>2</entry>
							</row>
						<row>
							<entry colname="c2">C2</entry><entry>2</entry>
							</row>
						<row>
							<entry colname="c2">C1,C2</entry><entry>2</entry>
							</row>
						<row>
							<entry>C2</entry><entry>N</entry><entry>1</entry>
							</row>
						</tbody>
					</tgroup>
				</table>
			<para>When a gene is selected, the main part of the <emphasis>Modelling Attributes</emphasis> tab enables the definition of the logical parameters, as shown in <xref linkend="fig_defLogParam" xrefstyle="select:label"/>.</para>
			<para>The panel dedicated to the definition of logical parameters is divided into three parts: <itemizedlist>
					<listitem><simpara>On the left, a table lists all defined logical parameters, showing their values and the corresponding lists of interactions.</simpara></listitem>
					<listitem><simpara>On the right, the list of all incoming interactions acting on the selected gene.</simpara></listitem>
					<listitem><simpara>The central part contains the following buttons:</simpara><itemizedlist>
							<listitem><simpara>"&lt;&lt;" assigns the set of selected incoming interactions (from the right list) to the selected logical parameter (use <emphasis>shift</emphasis> and <emphasis>ctrl</emphasis> to select several interactions).</simpara></listitem>
							<listitem><simpara>"X" deletes the selected logical parameter,</simpara></listitem>
							<listitem><simpara>up and down arrows reorder the selected logical parameters.</simpara></listitem>
							</itemizedlist></listitem>
					</itemizedlist></para>
			<figure id="fig_defLogParam">
				<title>Definition of non zero parameters for C1</title>
				<mediaobject id="logPara">
					<imageobject>
						<imagedata fileref="../figures/configuredInteraction.png" />
					</imageobject>
					<caption><para condition="html"><ulink url="javascript:show('logPara')">Show animation</ulink></para><para>The logical parameter panel, showing all parameters for C1.</para></caption>
				</mediaobject>
				</figure>
			</section>
		<section id="sec_saving">
			<title>Saving the graph</title>
			<para>The <emphasis>File</emphasis> menu contains the classical actions allowing to save, open or export files. GINsim uses a dedicated XML format: <ulink url="http://gin.univ-mrs.fr/GINsim/ginml.html">GINML</ulink>.</para>
			<para>The Save dialog box enables the saving of the graphical attributes. The default option saves all graphical attributes. Otherwise,  the sole structure of the graph or only the position of genes can be saved (see <xref linkend="fig_saveDialog" xrefstyle="select:label"/>) .</para>
			<tip><para>If the <emphasis>Extended Save</emphasis> checkbox is checked (default), a zip file (with a .zginml extension) will be created. This archive contains the graph along with related data, such as simulation parameters and mutant definitions.</para></tip>
			<figure id="fig_saveDialog">
				<title>The Save dialog box</title>
				<mediaobject>
					<imageobject>
						<imagedata fileref="../figures/saving.png" />
					</imageobject>
					<caption>GINsim uses the default java save dialog box, allowing to browse and create folders. By default, only folders and GINML files are shown. Saving requires to provide the name of the file.</caption>
				</mediaobject>
				</figure>
			</section>
		</section>
	<!-- ############################################ -->
	<section id="sec_simulation"><?dbhtml filename="simulation.html"?>
		<title>Running a simulation</title>
		<para>Once a regulatory model has been defined, a simulation can be launched through the option <emphasis>Run Simulation</emphasis> option of the <emphasis>Action</emphasis> menu.</para> 
		<para>The simulation computes a <emphasis>state transition graph</emphasis>, representing the dynamical behaviour of the model. The nodes of this graph, also called <emphasis>states</emphasis> of the system, are vectors giving the expression levels of all genes of the model (ordered as defined in the <emphasis>Graph Attributes</emphasis> tab of the regulatory graph).</para>
		<!--  <para>Considering a given state, <emphasis>logical parameters</emphasis> are used to compute the <emphasis>target expression level</emphasis> of each gene. If this value is different from the current expression level, the gene is calling for an update.<itemizedlist>
			<listitem>When none of the gene is calling for update, the state is stable and the simulation ends,</listitem>
			<listitem>when a single call for update is present, the next state of the system is obtained by copying the current state and increasing or decreasing the expression level of the changing gene by one,</listitem>
			<listitem>when several call for update are available, one or several following states will be generated, depending on the construction strategy.</listitem>
			</itemizedlist></para>
			-->
		<para>At a given state, a speciﬁc logical parameter can be associated with each regulatory component. If the value of this parameter is smaller or greater than that of the current concentration/activity level of the corresponding component, this level tends to decrease or increase, respectively. Otherwise (when the parameter value and the component level are equal), the component keeps its current value.</para>
		<para>Building a state transition graph involves the selection of a <xref linkend="updating" /> for its construction, the specification of <xref linkend="initStates" /> as well as  optional size constraints (not detailed here).</para>
		<figure id="fig_configSimulation">
			<title>Dialog box to configure the simulation</title>
			<mediaobject>
				<imageobject>
					<imagedata fileref="../figures/simulation_config.png" />
				</imageobject>
				<caption>The simulation dialog box. The left part of this dialog box allows to create several simulation parameters and to select which one is edited in the right part. The dialog box on the screenshot is ready to run an asynchronous depth first simulation, using a set of initial states. The set of initial states allows a single value for C1, three values (from 1 to 3) for Cro, and two values for C2 and N. 1*3*2*2 = 12 initial states will be considered. "M" before a value emphasizes the selection of the maximal value. "*" stands for all possible values within the associated range.</caption>
			</mediaobject>
		</figure>
		
		<section id="initStates" xreflabel="initial state(s)">
			<title>Initial state(s)</title>
			<para>The bottom part of the dialog box is dedicated to the selection of the initial states of the simulation. The simulation will start with each of these initial states, unless they have already been reached by a previous simulation (i.e. from another initial states).</para>
			<para>The simulation can consider all possible states as initial states (resulting to the <emphasis>full</emphasis> state transition graph), or use only a specific subset, defined in the table. Each line of this table describes one or several initial states, by mean of a set of allowed values for each gene of the system. A line can be defined but not taken into account if its <emphasis>use</emphasis> checkbox is unchecked.</para>
			</section>
		
		<section id="updating" xreflabel="strategy">
			<title>Construction strategy</title>
			<para>When several genes are called to update their expression levels at the same time, several strategies can be applied. In GINsim, the following construction strategies are implemented: 
				<itemizedlist>
					<listitem><simpara>Synchronous: all the updating calls are
						executed simultaneously. This strategy is generally
						considered unrealistic, but it is still useful in some cases.</simpara></listitem>
					<listitem><simpara>Asynchronous: only one updating call is executed at
						each step, but all possible trajectories are generated in the
						resulting state transition graph. This is the default
						strategy.</simpara></listitem>
					<listitem><simpara>Priority classes: fined-grained mode where a subset of updating calls are executed synchronously or asynchronously according to user-defined priority classes (see below).</simpara></listitem>
					</itemizedlist>
				<note><simpara>Stable (steady) states (<emphasis>i.e.</emphasis> states with no successor) are conserved whatever the selected updating assumption. However, their reachability may change.</simpara></note>
				<figure id="syncvsasync">
					<title>Construction strategy: synchronous versus asynchronous</title>
					<mediaobject>
						<imageobject>
							<imagedata fileref="../figures/a-sync.png" />
						</imageobject>
						<caption>Samples of simulation results for the lambda4 model, applying synchronous and asynchronous strategies to the same initial states (all states where C1=0 and Cro&gt;0). Dotted arcs denote transitions were several components are updated simultaneously.</caption>
					</mediaobject>
					</figure></para>
			<section id="sec_pclass">
				<title>Priority classes</title>
				<para>GINsim allows the user to group components into different classes, and to assign a priority
					level to each of these classes. In case of concurrent transition calls, GINsim ﬁrst updates the gene(s) belonging to the class with the highest ranking. For each priority class, the user can further specify the desired updating assumption, which then determines the treatment of concurrent transition calls inside that class. When several classes have the same ranking, concurrent transitions are treated under an asynchronous assumption (no priority).</para>
				<!--				
					<para>The priority class mode allows to group state transition into priority classes. This simulation mode enables to build more complex simulation rules. Each class has its own mode (synchronous or asynchronous) and a rank. The simulation works as follow:
					<itemizedlist>
					<listitem>search for the first changing gene, in each class starting with the first one (the highest ranked one, on top of the list),</listitem>
					<listitem>if none if found, the state is stable,</listitem>
					<listitem>if one is found, search for other changes with compatible priority: in the same class and in the next(s) one if they have been grouped,</listitem>
					<listitem>apply changes inside the same class according to the mode of the class, changes belonging to grouped class are applied asynchronously.</listitem>
					</itemizedlist>
					</para>
					-->
				<para>By default, all transitions belong to the same asynchronous class. Running the simulation without further configuration is thus the same as using the asynchronous assumption.</para>
				<para>The left part of the configuration dialog box shows a list of priority classes (see <xref linkend="fig_pclass" xrefstyle="select:label"/>). The name of a class can be edited and a checkbox allows to change its internal mode from asynchronous (unchecked) to synchronous (checked). Buttons enable to add (+), delete (X), order (using the arrows) and group/ungroup (G) them. Grouped classes have the same rank and the corresponding updating calls will be considered asynchronously.</para>
				<para>The central column lists transitions that belong to the currently selected class, whereas the column on the right lists all other transitions (belonging to other classes). To add transitions to the current class, select these transitions in the right list an click on the "&lt;&lt;" button. The "&gt;&gt;" button removes the selected transitions in the central list from the current class (and add them to the first class of the list).</para>
				<para>Finally, a choice list on the bottom left, allows to apply some predefined initial settings.</para>
				<figure id="fig_pclass">
					<title>Definition of Priority classes</title>
					<mediaobject id="pclass">
						<imageobject>
							<imagedata fileref="../figures/priorityClass.png"/>
						</imageobject>
						<caption><para condition="html"><ulink url="javascript:show('pclass')">Show animation</ulink></para></caption>
					</mediaobject>
					</figure>
				<figure id="fig_pclassexample">
					<title>Priority Class: example result</title>
					<mediaobject>
						<imageobject>
							<imagedata fileref="../figures/dyn_pclass.png"/>
						</imageobject>
						<caption><para>Example of simulation using priority classes. Two priority classes have been created. The class with the highest rank is synchronous and contains C1, C2 and Cro. The other class contains only N. The resulting state transition graph is splitted into two parts: N expressed vs. N not expressed.</para></caption>
					</mediaobject>
				</figure>
			</section>
		</section>
		
		<section id="sec_transitionBlocking">
			<title>Mutants</title>
			<para>Simple or multiple mutations (knockouts or ectopic gene expression) can be defined. A mutant is defined as restrictions on the evolution of the expression level of some genes. The mutant configuration dialog box, allows the definition of mutants by assigning minimal and maximal expression level to the relevant gene(s).</para>
			<warning><simpara>Mutant definitions prevent the expression level of a gene from leaving a given range, but it does not affect transitions outside of this range. Completly locking the expression level requires to define initial states in the restricted range.</simpara></warning>
			<figure id="fig_mutantDef">
				<title>Mutant definition</title>
				<mediaobject id="mdef">
					<imageobject>
						<imagedata fileref="../figures/mutantDef.png"/>
					</imageobject>
					<caption>Dialog box for the definition of mutants.<para condition="html"><ulink url="javascript:show('mdef')">Show animation</ulink></para></caption>
				</mediaobject>
			</figure>
			<figure id="fig_transitionBlocking">
				<title>Mutant simulation result</title>
				<mediaobject>
					<imageobject>
						<imagedata fileref="../figures/blocking.png"/>
					</imageobject>
					<caption>Result of an asynchronous simulation, where the expression level for Cro has been blocked at 1.
					The state transition graph is the same as the original asynchronous one, but all transitions where Cro leaves
					this value have been suppressed. This state transition graph is now composed of two disconnected parts,
					with a new stable state.</caption>
				</mediaobject>
			</figure>
		</section>
		
		<section id="whattodo">
			<title>Processing the new graph</title>
			<para>At the end of the simulation, a dialog box provides some informations on the generated state transition graph: size (number of states) and number of stable states. By default, GINsim proposes to save or display the graph, but the user can also run different analysis on it (see <xref linkend="fig_whattodo" xrefstyle="select:label"/>).</para>
			<figure id="fig_whattodo">
				<title>"Processing the new graph" dialog box</title>
				<mediaobject>
					<imageobject>
						<imagedata fileref="../figures/whattodo.png" />
					</imageobject>
					<caption>After a simulation, this dialog box allows to save the state transition graph or to perform further analysis without displaying it.</caption>
				</mediaobject>
			</figure>
		</section>
		
		</section>
	<!-- ############################################ -->
	<section id="sec_analysis"><?dbhtml filename="analysis.html"?>
		<title>Analysis tools</title>
		<section id="scc">
			<title>Strongly connected component</title>
			<para>GINsim enables the identification of the graph of the Strongly Connected Components (SCC graph, see <ulink url="http://en.wikipedia.org/wiki/Strongly_connected_component"/>) of an existing graph. The SCC graph is an acyclic graph based on the original one: each node of the SCC graph is a cycle or a set of intertwined cycles of the original graph. To compute this graph, use the "SCC graph" action in the "Actions" menu.</para>
			<figure id="fig_scc">
				<title>Strongly Connected Components Graph</title>
				<mediaobject>
					<imageobject>
						<imagedata fileref="../figures/scc.png"/>
					</imageobject>
				</mediaobject>
			</figure>
			<tip><simpara>While displaying a SCC graph, the "selection attribute" tab in the bottom panel shows the content of the selected component (i.e. the list of corresponding nodes in the original graph).</simpara></tip>
			</section>
		<section id="sec_pathFinder">
			<title>Path finder</title>
			<para>The "search path" action allows to find a path between different states of the state transition graph. Selecting the "search a path" action in the action menu opens the configuration dialog. This dialog allows to specify the starting state, the target state , and intermediate states (using the "+" and "X" buttons to add/remove them). GINsim then performs a shortest path search (If several paths exist between these states, the result is thus the first encountered shortest path).</para>
			<figure id="fig_pathFinder">
				<title>Search for a path in the state transition graph</title>
				<mediaobject>
					<imageobject>
						<imagedata fileref="../figures/search_path.png"/>
					</imageobject>
				<caption><para>The search tool has found a path from the state <emphasis>0110</emphasis> to <emphasis>0311</emphasis>, involving four steps.</para></caption>
				</mediaobject>
			</figure>
			<para>The <olink targetdoc="userManual" targetptr="sec_animator">animation tool</olink> allows to select a path interactively. It highlights genes of the regulatory graph according to the selected state.</para>
			</section>
		</section>
	<bibliography id="biblio">
		<title>References</title>
		<biblioentry id="Chaouiya2003" xreflabel="1">
			<authorgroup>
				<author><firstname>Claudine</firstname><surname>Chaouiya</surname></author>
				<author><firstname>Elisabeth</firstname><surname>Remy</surname></author>
				<author><firstname>Brigitte</firstname><surname>Mossé</surname></author>
				<author><firstname>Denis</firstname><surname>Thieffry</surname></author>
			</authorgroup>
			<title>Qualitative analysis of regulatory graphs: a computational tool based on a discrete formal framework</title>
			<publisher><publishername>Lectures Notes in Control and Information Sciences</publishername></publisher>
			<pubdate>2003</pubdate>
			<volumenum>294</volumenum>
			<pagenums>119-126</pagenums>
		</biblioentry>
		<biblioentry  id="Gonzalez2006" xreflabel="2">
			<authorgroup>
				<author><firstname>Aitor</firstname><surname>Gonzalez Gonzalez</surname></author>
				<author><firstname>Aurélien</firstname><surname>Naldi</surname></author>
				<author><firstname>Lucas</firstname><surname>Sanchez</surname></author>
				<author><firstname>Denis</firstname><surname>Thieffry</surname></author>
				<author><firstname>Claudine</firstname><surname>Chaouiya</surname></author>
			</authorgroup>
			<title>GINsim: a software suite for the qualitative modelling, simulation and analysis of regulatory networks</title>
			<publisher><publishername>Biosystems</publishername></publisher>
			<pubdate>2006</pubdate>
			<volumenum>84</volumenum>
			<pagenums>91-100</pagenums>
			<biblioid class="doi">doi:10.1016/j.biosystems.2005.10.003</biblioid>
		</biblioentry>
	</bibliography>
</article>
