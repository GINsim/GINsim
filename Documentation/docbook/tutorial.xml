<?xml version="1.0"?>
<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN"
    "http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd">
<article lang="en-GB">
  <?dbhtml dir="tutorial"?>
  <articleinfo>
    <title>GINsim tutorial</title>
    <bibliomisc>Web : http://gin.univ-mrs.fr/GINsim/</bibliomisc>
  </articleinfo>
  <section>
    <title>Overview</title>
    <para>GINsim (see the screenshot in <xref linkend="sc_mainWindow" xrefstyle="select:label"/>) is a tool supporting the definition, the simulation and the analysis of regulatory graphs based on a <emphasis role="strong">multilevel logical formalism</emphasis>. This formalism lean on the definition of two types of graphs: 
    <emphasis role="strong">regulatory graphs</emphasis>which model regulatory networks, and 
    <emphasis role="strong">state transition graphs</emphasis>which represent the dynamical behaviour, for given initial state(s) and under some updating assumptions. This short tutorial intends to introduce the main steps enabling the specification of a logical model, its simulation, and the analysis of the state transition graph.
		</para>
    <figure id="sc_mainWindow">
      <title>Main window of GINsim.</title>
      <graphic fileref="../figures/mainWindow.png" />
			When GINsim is launched, its main window opens, featuring an empty model.
		</figure>
    <para>First, we describe the specification of a regulatory
    graph, taking as exemple a model of the lysis-lysogeny decision
    in the phage lambda. Then we present the simulation of this model 
		(ie the construction of the state transition graph) and some of the available
		analysis tools.</para>
    <para>Please see the    <olink targetdoc="userManual">GINsim user manual</olink> for more detailled informations on using GINsim.</para>
    <bibliography>
      <title>References</title>
      <biblioentry>
        <title>Qualitative analysis of regulatory graphs: a
        computational tool based on a discrete formal
        framework</title>
        <authorgroup>
          <author>
            <firstname>Claudine</firstname>
            <surname>Chaouiya</surname>
          </author>
          <author>
            <firstname>Elisabeth</firstname>
            <surname>Remy</surname>
          </author>
          <author>
            <firstname>Brigitte</firstname>
            <surname>Moss√©</surname>
          </author>
          <author>
            <firstname>Denis</firstname>
            <surname>Thieffry</surname>
          </author>
        </authorgroup>
        <!-- Lectures Notes in Control and Information Sciences -->
        <volumenum>294</volumenum>
        <pagenums>119-126</pagenums>
        <pubdate>2003</pubdate>
      </biblioentry>
      <biblioentry>
        <title>GINsim: a software suite for the qualitative
        modelling, simulation and analysis of regulatory
        networks</title>
        <authorgroup>
          <author>
            <firstname>Aitor</firstname>
            <surname>Gonzalez Gonzalez</surname>
          </author>
          <author>
            <firstname>Lucas</firstname>
            <surname>Sanchez</surname>
          </author>
          <author>
            <firstname>Denis</firstname>
            <surname>Thieffry</surname>
          </author>
          <author>
            <firstname>Claudine</firstname>
            <surname>Chaouiya</surname>
          </author>
        </authorgroup>
        <publisher>biosystems</publisher>
        <volumenum>84</volumenum>
        <pagenums>91-100</pagenums>
        <pubdate>2006</pubdate>
      </biblioentry>
    </bibliography>
  </section>
  <section>
    <?dbhtml filename="defRegNetwork.html"?>
    <title>Defining a regulatory network model</title>
    <section>
    <title>Drawing the regulatory graph</title>
    <para>The first step is to "draw" the regulatory graph, using
    toolbar buttons.</para>
    <figure id="toolbar" xreflabel="edti toolbar">
      <title>Graph editing buttons in the toolbar.</title>
      <graphic fileref="../figures/editingButtons.png" />
    </figure>
			<informaltable>
	        <tgroup cols="2">
          <colspec colname="c1" />
          <colspec colname="c2" />
					<thead>
						<row>
							<entry namest="c1" nameend="c2">Available editing modes:</entry>
						</row>
						</thead>
				<tbody>
					<row><entry><inlinegraphic fileref="../figures/buttons/editmode.gif" /></entry>
					<entry>Normal editing mode, allows to select and move objects.</entry></row>
					<row><entry><inlinegraphic fileref="../figures/buttons/insertsquare.gif" />,<inlinegraphic fileref="../figures/buttons/insertelipse.gif" /></entry>
						<entry>Gene insertion modes, when selected, clicking in the graph adds a
    new gene.</entry></row>
					<row>
						<entry>
							<inlinegraphic fileref="../figures/buttons/insertpositiveedge.gif" />,
							<inlinegraphic fileref="../figures/buttons/insertnegativeedge.gif" />,
							<inlinegraphic fileref="../figures/buttons/insertunknownedge.gif" />
						</entry>
					  <entry>Arc insertion mode, when selected, draging from one gene to another
    adds an interaction.</entry>
				</row>
				</tbody>
					</tgroup>
			</informaltable>
    <tip>Editing modes are non-permanent by default: once the
    action has been performed, GINsim switches back to the normal
    mode. Double-click on a button to lock it in a given
    mode.</tip>
    <para>Let us take as example a simple model of the
    lysis-lysogeny decision in the phage lambda. This tutorial
    focuses on entering and simulating the model in GINsim, a more
    complete description is available in the 
    <ulink url="http://gin.univ-mrs.fr/GINsim/repository.html">
    model repository</ulink>.</para>
    <figure>
      <title>The model</title>
      <graphic id="phage4Model" fileref="../figures/phage4.png" />
      <ulink url="javascript:show('phage4Model')">Show
      animation</ulink>
    </figure></section>
    <section>
      <title>Entering expression levels and ranges for
      interactions</title>
      <para>Next, maximal and basal levels of expression have to be
      defined for each gene. The basal level corresponds to
      situation where no incoming interaction is active. Let us
      enter the following values: 
      <informaltable>
        <tgroup cols="3">
          <colspec colname="c1" />
          <colspec colname="c2" />
          <colspec colname="c3" />
          <tbody>
            <row>
              <entry>Gene</entry>
              <entry>max value</entry>
              <entry>base value</entry>
            </row>
            <row>
              <entry>Cro</entry>
              <entry>3</entry>
              <entry>3</entry>
            </row>
            <row>
              <entry>C1</entry>
              <entry>2</entry>
              <entry>2</entry>
            </row>
            <row>
              <entry>C2</entry>
              <entry>1</entry>
              <entry>0</entry>
            </row>
            <row>
              <entry>N</entry>
              <entry>1</entry>
              <entry>1</entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable>For each selected gene, these values want to
      be specified through the modelling attributes panel: 
      <figure>
        <title>Specification of maximal and basal values for
        Cro</title>
        <graphic fileref="../figures/geneConfig.png" />
      </figure>The next step consists in defining the intervals
      associated to each interaction, whenever necessary (per
      default, the interval is set to [1-maximal value]). For the
      selected edge, these values can be specified through the
      modelling attributes pannel (see figure ??? ). In this model,
      the following interaction needs to be properly specified: 
      <informaltable>
        <tgroup cols="3">
          <colspec colname="c1" />
          <colspec colname="c2" />
          <colspec colname="c3" />
          <tbody>
            <row>
              <entry>Source</entry>
              <entry>Target</entry>
              <entry>Range</entry>
            </row>
            <row>
              <entry>Cro</entry>
              <entry>Cro</entry>
              <entry>[3,Max]</entry>
            </row>
            <row>
              <entry>Cro</entry>
              <entry>N</entry>
              <entry>[2,Max]</entry>
            </row>
            <row>
              <entry>C1</entry>
              <entry>C1</entry>
              <entry>[2,Max]</entry>
            </row>
            <row>
              <entry>C1</entry>
              <entry>Cro</entry>
              <entry>[2,Max]</entry>
            </row>
            <row>
              <entry>C1</entry>
              <entry>C2</entry>
              <entry>[2,Max]</entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable>
      <figure>
      <title>Specification of the intervals associated with the
      Cro-N interaction</title>
      <graphic fileref="../figures/interactionConfig.png" />In the
      non-boolean case, a gene can have several distinct effect on
      another one, depending on its activity level. In this case,
      only one arc is drawn and all distinct effects appear in the
      left part of this configuration panel.</figure></para>
    </section>
    <section>
      <title>Editing Logical Parameters</title>
      <para>When a gene is selected the middle part of the lower
      panel enables the definition of the logical parameters</para>
      <para>Per default, all parameters are considered to be zero.
      Consequently, only the non-zero parameters have to be
      explicitly defined. A parameter is defined by means of a list
      of incoming interactions, and a value representing the level
      towards which the regulated node tends under the influence of
      all these incoming interactions.</para>
      <para>In the case of the gene G1, we can define two non zero
      parameters as follows</para>
      <para>Table of the non-zero parameters 
      <informaltable>
        <tgroup cols="3">
          <colspec colname="c1" />
          <colspec colname="c2" />
          <colspec colname="c3" />
          <tbody>
            <row>
              <entry>Gene</entry>
              <entry>active interactions</entry>
              <entry>target value</entry>
            </row>
            <row>
              <entry>Cro</entry>
              <entry>Cro</entry>
              <entry>2</entry>
            </row>
            <row>
              <entry>C1</entry>
              <entry>C2</entry>
              <entry>2</entry>
            </row>
            <row>
              <entry>C1</entry>
              <entry>C1</entry>
              <entry>2</entry>
            </row>
            <row>
              <entry>C1</entry>
              <entry>C1, C2</entry>
              <entry>2</entry>
            </row>
            <row>
              <entry>C2</entry>
              <entry>N</entry>
              <entry>1</entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable>
      <figure>
        <title>Definition of non zero parameters for C1</title>
        <graphic fileref="../figures/configuredInteraction.png" />
      </figure></para>
    </section>
  </section>
  <section><?dbhtml filename="simulation.html"?>
  <title>Running a simulation</title>
  <para>Once a regulatory model has been defined, a simulation can
  be launched trough the menu Action, and the option run
  simulation. This involves the selection of an 
  <xref linkend="updating" />for the construction of the state
  transtion graph, as well as the specification of the 
  <xref linkend="initStates" />and of 
  <xref linkend="limits" />. One can find more details on
  simulation options in the 
  <olink targetdoc="userManual" targetptr="simulation">relevant
  section</olink>of the 
  <olink targetdoc="userManual">user manual</olink>.</para>
  <figure>
    <title>Pannel giving access to the different options for the
    simulation (toy model)</title>
    <graphic fileref="../figures/simulation_config.png" />
  </figure>At the end of the simulation, the state transition graph
  is generated. A new dialog window provides a synthesis of the
  results, including the number of states, the number of stable
  states... The state transition graph can then be displayed, saved
  or exported, or yet further manipulated through the menu perform
  an action: 
  <figure>
    <title>What to do</title>
    <graphic fileref="../figures/whattodo.png" />
  </figure>
  <section id="updating" xreflabel="updating assumption">
    <title>Updating assumption</title>
    <para>Logical parameters give, for each gene separatly, the
    value towards which its expression level tends, for a given set
    of active interactions. Each step of the simulation consists in
    finding this target level for each gene. When this target level
    is different than its current expression level, the gene
    expression level is able to change toward this target. When
    several gene are able to change their expression level at the
    same time, several updating methods can be applied. In GINsim,
    the following updating assumptions are implemented: 
    <itemizedlist>
      <listitem>Synchronous: all the node updating calls are
      executed simultaneously. This assumption is generally
      considered unrealistic, but it is still usefull in some case
      and its simplicity is attractive.</listitem>
      <listitem>Asynchronous: only one updating call is executed at
      each step, but all possible trajectories are generated in the
      resulting state transition graph. This is the default
      assumption. This avoids the synchronicity trap at the expense
      of generating many concurrent path. Resulting state
      transition graphs are more realistic but contains unrealistic
      path which have to be further studied.</listitem>
      <listitem>By priority class: Mixed mode where regulators are
      grouped in priority class, transitions inside each class
      happening either synchronously or asynchronously.</listitem>
    </itemizedlist>The following figure 
    <xref linkend="syncvsasync" xrefstyle="select:label" />provides
    samples of simulation results for the phage lambda model, using
    different simulation options. In all case, the values of the
    nodes are increased or decreased by one unit at most. In the
    asynchronous case, two additional options are available: depth
    first or breadth first. 
    <note>Stable (steady) states are conserved whatever the
    selected updating assumption is. Their reachability, like this
    of any state, may however change.</note>
    <figure id="syncvsasync">
      <title>Synchronous versus asynchronous simulation (All states
      where C1=0)</title>
      <graphic fileref="../figures/a-sync.png" />
    </figure></para>
  </section>
  <section id="initStates" xreflabel="initial state(s)">
    <title>Initial state(s)</title>
    <para>The initial state(s): single of sets of initial states
    can be defined, including the whole logical space.</para>
  </section>
  <section id="limits" xreflabel="constraints">
    <title>Limits and transition blocking</title>
    <para>The evolution of some nodes to a given value (or range of
    values) can be restricted in a specific interval (transition
    blocking): once they reached this range, they are not allowed
    to leave it. For an asynchronous dynamics, and a depth first
    search, a limit for the depth can be further specified.
    Finally, the construction of the state transition graph can be
    limited to a maximal number of nodes (states) 
    <figure>
      <title>Limitation of the depth in the case of a depth first
      construction,</title>
      <graphic fileref="../figures/stg_depth_limit.png" />
    </figure>
    <figure>
      <title>Limitation of the size (depth first and breadth first
      search construction)</title>
      <graphic fileref="../figures/stg_size_limit_depthFirst.png" />
      <graphic fileref="../figures/stg_size_limit_breadthFirst.png" />
    </figure></para>
  </section>
	</section>
</article>
