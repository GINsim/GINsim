<?xml version="1.0"?>
<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN" "http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd">
<article lang="en">
	<?dbhtml dir="userManual"?>
	<articleinfo><title>GINsim user manual</title>
		<bibliomisc>Web : http://gin.univ-mrs.fr/GINsim/</bibliomisc>
	</articleinfo>
	<section id="sec_intro">
		<title>Introduction</title>
		<section id="sec_about">
			<title>About GINsim</title>
			<para>GINsim is a software supporting the definition, the simulation and the analysis of
				regulatory graphs. The underlying <emphasis role="strong">multilevel logical
				formalism</emphasis> leans on the definition of two types of graphs:
					<emphasis role="strong">regulatory graphs</emphasis>, which model regulatory
				networks, and <emphasis role="strong">state transition graphs</emphasis>, which
				represent their dynamical behaviour.</para>
		</section>
		<section id="sec_availability">
			<title>Availability</title>
			<para>GINsim 2.3 is freely available for academic users, please contact us for other uses.
			The GINsim website (<ulink url="http://gin.univ-mrs.fr/GINsim"/>) provides the latest official
			version of the software, documentation, as well as a model library.</para>
		</section>
		<section id="sec_running">
			<title>Running GINsim</title>
			<para>GINsim is a Java application and should thus run on any system offering a Java
				virtual machine (version 1.4 or later). If Java is not already installed on your
				computer, it can be downloaded:<itemizedlist>
					<listitem>
						<simpara>from <ulink url="http://java.sun.com">sun Java page</ulink> for
							Windows, Solaris and Linux (i386 and AMD64),</simpara>
					</listitem>
					<listitem>
						<simpara>from <ulink url="http://www.apple.com/macosx/features/java/">apple
								Java page</ulink> for Mac OS X users,</simpara>
					</listitem>
					<listitem>
						<simpara>from <ulink
								url="http://www-128.ibm.com/developerworks/java/jdk/index.html">IBM
								Java page</ulink> for some other systems (AIX,
						linux-PPC).</simpara>
					</listitem>
				</itemizedlist></para>
			<para>Other system requirements depend heavily on model size. To work confortably, a
				computer with at least 512Mo of RAM is required. A screen resolution of at least
				1024x768 is recommended.</para>
			<para>GINsim is available in two forms:<itemizedlist>
					<listitem>
						<simpara><emphasis role="bold">A single jar file</emphasis>. On a properly
							configured system, double-click on the file to launch the application,
							otherwise run it with the command: <emphasis>java -jar
								GINsim-$version.jar</emphasis>.</simpara>
					</listitem>
					<listitem>
						<simpara><emphasis role="bold">An archive</emphasis> (zip or tar.gz format).
							Uncompress it and run the relevant launcher script: runginsim.bat for
							windows, runginsim.sh for UNIX-like systems, and runginsim.command for
							Mac OS X. This version includes the documentation (tutorial and user
							manual) and can be extended through plugins.</simpara>
					</listitem>
				</itemizedlist><tip>
					<para>Large models may require an increase of the amount of RAM available to the
						Java virtual machine. This can be done:<itemizedlist>
							<listitem>
								<simpara>for the jar file, with the command <emphasis>java -Xmx300M
										-jar GINsim-$version.jar</emphasis> (replace 300 by the
									amount of RAM you want, in Mo);</simpara>
							</listitem>
							<listitem>
								<simpara>for the archive, by changing the value of the
										<emphasis>JAVAMAXMEM</emphasis> variable in the launcher
									script.</simpara>
							</listitem>
						</itemizedlist></para>
				</tip></para>
		</section>
		<section id="sec_overview">
			<title>Overview of the manual</title>
			<para>The next section covers the Graphical User Interface of GINsim, mostly through the
				presentation of the main menu options. Section 3 presents the editing tools
				dedicated to regulatory graphs. Section 4 is dedicated to simulation (i.e. the
				generation of state transition graphs). Finally section 5 and 6 present analysis tools.</para>
			<para>For a first introduction to GINsim, the <olink targetdoc="tutorial">GINsim
					tutorial</olink> may be a better starting point. This manual uses as much as
				possible the same examples and figures.</para>
		</section>
		<section id="sec_new">
			<title>New in GINsim 2.3</title>
			<para>Noteworthy improvements:<itemizedlist>
					<listitem>
						<simpara>"extended save" option when saving a file;</simpara>
					</listitem>
					<listitem>
						<simpara>redesign of the <xref linkend="sec_simulation"
								xrefstyle="select:label"/> dialog box;</simpara>
					</listitem>
					<listitem>
						<simpara><xref linkend="sec_mutants" xrefstyle="select:label"/> replace
							transition blocking (and can be stored when using extended save).</simpara>
					</listitem>
				</itemizedlist> New features:<itemizedlist>
					<listitem>
						<simpara>export in several <xref linkend="sec_pn" xrefstyle="select:label"/> formats;</simpara>
					</listitem>
					<listitem>
						<simpara>efficient determination of the <xref linkend="sec_stableStates"
								xrefstyle="select:label"/> of a regulatory graph;</simpara>
					</listitem>
					<listitem>
						<simpara>identification of the <xref linkend="sec_circuits"
								xrefstyle="select:label"/>.</simpara>
					</listitem>
					<listitem>
						<simpara><xref linkend="sec_cytoscape" xrefstyle="select:label"/>.</simpara>
					</listitem>
				</itemizedlist></para>
		</section>
	</section>
	<!--      *************************************************************************  -->
	<section id="sec_ui">
		<?dbhtml filename="ui.html"?>
		<title>The User Interface</title>
		<section id="sec_mainWindow">
			<title>The GINsim window</title>
			<para>When GINsim is launched, its main window opens (see <xref linkend="sc_mainWindow"
					xrefstyle="select:label"/>). This window is divided into three parts:<itemizedlist>
					<listitem>
						<simpara>the menu and toolbar on the top;</simpara>
					</listitem>
					<listitem>
						<simpara>the graph panel, as the main central part;</simpara>
					</listitem>
					<listitem>
						<simpara>the secondary panel on the bottom.</simpara>
					</listitem>
				</itemizedlist></para>
			<figure id="sc_mainWindow">
				<mediaobject>
					<imageobject>
						<imagedata fileref="../figures/mainWindow.png"/>
					</imageobject>
				</mediaobject>
				<title>The main window of GINsim</title>
				<caption>The main window of GINsim, featuring an empty model.</caption>
			</figure>
			<para>In the following, the contents of the menus are described.</para>
		</section>
		<section id="sec_fileMenu">
			<title>File menu</title>
			<figure id="fig_fileMenu">
				<title>File menu</title>
				<mediaobject>
					<imageobject>
						<imagedata fileref="../figures/fileMenu.png"/>
					</imageobject>
					<caption>The File menu offers all the classical options to open/save a file, to
						open/close a window, and to quit the application.</caption>
				</mediaobject>
			</figure>
			<para> The File menu provides the following options: <itemizedlist>
					<listitem>
						<simpara><emphasis>New</emphasis>: to create a new graph. This opens a new window unless the
							current graph is empty.</simpara>
					</listitem>
					<listitem>
						<simpara><emphasis>Open</emphasis>: to load a graph from a file. This opens a new window
							unless the current graph is empty.</simpara>
					</listitem>
					<listitem>
						<simpara><emphasis>Recent Files</emphasis>: to open a recently used graph. This submenu lists the
							last opened graphs.</simpara>
					</listitem>
					<listitem>
						<simpara><emphasis>Merge graph</emphasis>: to open a graph and merge it with the current one.
							This option works only for regulatory graphs.</simpara>
					</listitem>
					<listitem>
						<simpara><emphasis>Close</emphasis>: to close the current graph. If other windows are opened, it
							will simply close the current one, otherwise it will last with an empty
							window.</simpara>
					</listitem>
					<listitem>
						<simpara><emphasis>Save</emphasis> and <emphasis>Save as</emphasis>: to save the current graph. If the file is new or
							if the <emphasis>Save as</emphasis> option has been selected, a
								file selection dialog appears (<xref
								linkend="fig_saveDialog" xrefstyle="select:label"/>) which allows to choose the graphical
							attributes to save: it is possible to save only the structure of
							the graph, ignoring all graphical attributes, or to save only the
							position of nodes. The default is to save all graphical attributes
							(position, size, color, shape...). The graph is saved in the (XML-based) <ulink url="http://gin.univ-mrs.fr/GINsim/ginml.html"><emphasis
									role="strong">GINML</emphasis></ulink> format.
							<!--
							<itemizedlist>
							<listitem>extended save: if this option is selected, the resulting file will be a zip file containing the model itself along with additionnal data (simulation parameters, definition of mutants...) that is associated to it. If the option is not selected, the file will be a text file containing only the model.</listitem>
						</itemizedlist>
							-->
						</simpara>
					</listitem>
					<listitem>
						<simpara><emphasis>Save Subgraph</emphasis>: to save the current selection as a new
						graph.</simpara>
					</listitem>
					<listitem>
						<simpara><emphasis>Export</emphasis>: to save the current graph in another format. GINsim
							can export regulatory and state transition graphs using several generic visualisation formats.
							These exports only retain the graph structure and
							visual appearance. The following export formats are available under the
							File/export submenu: </simpara>
						<itemizedlist>
							<listitem>
								<simpara role="newline"><emphasis>Graphviz:</emphasis> Graphs can be
									exported to the "dot" format used by the graph visualisation
									software Graphviz (<ulink url="http://www.graphviz.org"
										>http://www.graphviz.org</ulink>). This export considers
									only the graph structure (graphical attributes are lost). It
									enables the display of large state transition graphs, that can
									not be viewed within GINsim.</simpara>
							</listitem>
							<listitem>
								<simpara role="newline"><emphasis>BioLayout:</emphasis> graphs can also be exported to
									the BioLayout format (<ulink url="http://www.biolayout.org"
										>http://www.biolayout.org</ulink>). As in the case of graphviz,
									graphical attributes are lost.</simpara>
							</listitem>
							<listitem>
								<simpara role="newline"><emphasis>SVG:</emphasis> the Scalable Vector Graphic (SVG)
									format is an XML-based format for representing vector graphics
										(<ulink url="http://www.w3.org/Graphics/SVG/"
										>http://www.w3.org/Graphics/SVG/</ulink>). Tools like
									Inkscape (<ulink url="http://inkscape.org/"
									>http://inkscape.org</ulink>), can be used to display, modify
									and export SVG files to virtually any image format.</simpara>
							</listitem>
						</itemizedlist>
						<simpara>The regulatory graph can additionally be exported into different <xref
								linkend="sec_pn"/> formats.</simpara>
					</listitem>
					<listitem>
						<simpara><emphasis>Quit</emphasis>: close all graphs and exit the GINsim application.</simpara>
					</listitem>
				</itemizedlist> Some of these actions (<emphasis>New</emphasis>, <emphasis>Open</emphasis> and <emphasis>Save</emphasis>) are also available from
				the toolbar. </para>
			<figure id="fig_saveDialog">
				<title>The save dialog</title>
				<mediaobject>
					<imageobject>
						<imagedata fileref="../figures/saving.png"/>
					</imageobject>
					<caption>
						<simpara>The Java <emphasis>Save</emphasis> dialog allows to browse and
							create folders, as well as to choose their location. By default, only
							folders and GINML files are shown; other files can be seen by removing
							the <emphasis>GINML Files</emphasis> filter. The drop-down list 
							on the right side allows to select the graphical attributes to save. The
								<emphasis>ExtendedSave</emphasis> checkbox allows to enable or
							disable extended save (which generates an archive containing the graph and related
							data).</simpara>
					</caption>
				</mediaobject>
			</figure>
			<tip>
				<simpara>If the <emphasis>Extended Save</emphasis> option is selected, the file is
					saved in an archive (zip file with a .zginml extension) instead of a xml file
					(with a .ginml extension). This allows to save related data, such as simulation
					parameters or mutant definitions, along with the model. These files need GINsim
					2.3 or later  to be opened.</simpara>
			</tip>
			<!--
				<para>In addition to these generic export format, regulatory graphs can be exported into <ulink url="http://www.sbml.org/">SBML</ulink>. <warning>MORE EXPLANATIONS ARE NEEDED</warning></para>
				-->
		</section>
		<section id="sec_editMenu">
			<title>Edit menu</title>
			<figure id="fig_editMenu">
				<title>The Edit menu</title>
				<mediaobject>
					<imageobject>
						<imagedata fileref="../figures/editMenu.png"/>
					</imageobject>
					<caption>The Edit menu allows the selection of some editing options. It is
						composed of three sections: copy/paste, graph editing tools and selection
						management.</caption>
				</mediaobject>
			</figure>
			<section id="sec_copyPaste">
				<title>Copy/paste</title>
				<para>The edit menu offers classical <emphasis>Copy</emphasis> / <emphasis>Paste</emphasis> entries.</para>
				<note>
					<simpara><emphasis>Copy</emphasis> and <emphasis>Paste</emphasis> actions are
						specific to GINsim: copying the graph and pasting it into an external
						application is not supported. These actions are only available for
						regulatory graphs.</simpara>
				</note>
				<itemizedlist>
					<listitem>
						<simpara>Regulatory graph elements can be copied and pasted from one GINsim window to
							another.</simpara>
					</listitem>
					<listitem>
						<simpara>Pasted elements are automatically selected to ease their move.</simpara>
					</listitem>
					<listitem>
						<simpara>The <emphasis>Copy</emphasis> action does not test selected
							interactions, it will automatically select ALL interactions between
							selected genes.</simpara>
					</listitem>
					<listitem>
						<simpara>The identifiers of pasted genes are postfixed to avoid naming conflicts</simpara>
					</listitem>
					<listitem>
						<simpara>Logical parameters are also copied and cleaned up: logical
							parameters involving not-copied nodes are suppressed. The resulting graph
							is consistent but the new parameters may need to be checked.</simpara>
					</listitem>
				</itemizedlist>
			</section>
			<section id="sec_graphEditing">
				<title>Graph editing tools</title>
				<para><itemizedlist>
						<listitem>
							<simpara><emphasis>Delete</emphasis>: to delete all selected
							elements.</simpara>
						</listitem>
						<listitem>
							<simpara><emphasis>Edit</emphasis>: to select and move genes and arcs
								(default editing mode).</simpara>
						</listitem>
						<listitem>
							<simpara><emphasis>Add Node</emphasis>: to add a node. This submenu
								lists the node insertion modes. When this mode is selected,
								clicking in the graph panel creates a new node.</simpara>
						</listitem>
						<listitem>
							<simpara><emphasis>Add Arc</emphasis>: to add an arc. This submenu lists
								the arc insertion modes. When one of these modes is selected,
								dragging from a node to another adds an arc between them.</simpara>
						</listitem>
					</itemizedlist> Toolbar buttons show the selected editing mode and allow to
					change it. <tip>
						<simpara>The selection of non-default editing modes is transient by default:
							once the action has been performed, GINsim switches back to the default
							mode (E). GINsim can be locked in any mode by double-clicking on the
							corresponding toolbar button.</simpara>
					</tip> These options are <emphasis role="strong">not</emphasis> available when
					visualizing a state transition graph.</para>
			</section>
			<section id="sec_selection">
				<title>Multiple Selection</title>
				<itemizedlist>
					<listitem>
						<simpara><emphasis>Select All</emphasis>: select all elements of the
						graph.</simpara>
					</listitem>
					<listitem>
						<simpara><emphasis>Invert Selection</emphasis>: unselect all selected
							elements and select all others.</simpara>
					</listitem>
				</itemizedlist>
			</section>
		</section>
		<section id="sec_viewMenu">
			<title>View menu</title>
			<figure id="fig_viewMenu">
				<title>The View menu</title>
				<mediaobject>
					<imageobject>
						<imagedata fileref="../figures/viewMenu.png"/>
					</imageobject>
					<caption>The View menu allows to control the zoom factor and to set some display
						options.</caption>
				</mediaobject>
			</figure>
			<para/>
			<para>The View menu encompasses the following items:</para>
			<itemizedlist>
				<listitem>
					<simpara><emphasis>Zoom In/Out</emphasis> and <emphasis>Normal Size</emphasis>:
						to control the zoom factor.</simpara>
				</listitem>
				<listitem>
					<simpara><emphasis>Split Tool Window</emphasis>: to put the secondary panel in a
						separate window.</simpara>
				</listitem>
				<listitem>
					<simpara><emphasis>Arc Names</emphasis>: to display or hide arc names (the
						source and target nodes).</simpara>
				</listitem>
				<listitem>
					<simpara><emphasis>Nodes to front</emphasis>: to move all nodes to front (above
						arcs) or to back (makes selection easier).</simpara>
				</listitem>
				<listitem>
					<simpara><emphasis>Grid</emphasis>: to display or hide the grid in the graph
						panel.</simpara>
				</listitem>
				<listitem>
					<simpara><emphasis>Grid Active</emphasis>: to make the grid magnetic.</simpara>
				</listitem>
				<listitem>
					<simpara><emphasis>Bird View</emphasis>: to display or hide the bird view
						(miniature) of the graph in the secondary window. The bird view gives an
						overview for large graphs, and enables the selection of the visible
					part.</simpara>
				</listitem>
			</itemizedlist>
		</section>
		<section id="sec_actionMenu">
			<title>Actions menu</title>
			<figure id="fig_actionMenu">
				<title>The Actions menu</title>
				<mediaobject>
					<imageobject>
						<imagedata fileref="../figures/actionMenu.png"/>
					</imageobject>
					<caption>The Action menu for a regulatory graph.</caption>
				</mediaobject>
			</figure>
			<para>Different actions can be performed from this menu, depending on the type of graph.
				Individual actions are detailed in the relevant part of this manual. Currently
				available actions are:</para>
			<itemizedlist>
				<listitem>
					<simpara role="newline">for all graphs:</simpara>
					<itemizedlist>
						<listitem>
							<simpara role="newline"><xref linkend="sec_layout"/>;</simpara>
						</listitem>
						<listitem>
							<simpara role="newline">determination of the <link linkend="sec_scc">Strongly
								Connected Components (SCC)</link> of a graph;</simpara>
						</listitem>
					</itemizedlist>
				</listitem>
				<listitem>
					<simpara role="newline">for regulatory graphs:</simpara>
					<itemizedlist>
						<listitem>
							<simpara role="newline"><xref linkend="sec_simulation"/> (<emphasis>i.e.</emphasis> computation of a state transition graph);</simpara>
						</listitem>
						<listitem><simpara role="newline">analyse of the <xref linkend="sec_circuits"/>;</simpara></listitem>
						<listitem><simpara role="newline">determination of <xref linkend="sec_stableStates"/>;</simpara></listitem>
						<!--
						<listitem><simpara role="newline">running a <xref linkend="modelChecker"/>;</simpara></listitem>
						-->
					</itemizedlist>
				</listitem>
				<listitem>
					<simpara role="newline">for state transition graphs:</simpara>						
					<itemizedlist>
						<listitem>
							<simpara role="newline"><link linkend="pathFinder">path search</link>;</simpara>
						</listitem>
						<listitem>
							<simpara role="newline"><link linkend="animator">graphical path construction
							(animation)</link>.</simpara>
						</listitem>
				</itemizedlist>
				</listitem>
			</itemizedlist>
			<section id="sec_layout" xreflabel="layout algorithms">
				<title>Layout algorithms</title>
				<para>Elements of the graph can be placed automatically (useful for graphs
					constructed by GINsim, like state transition graphs).</para>
				<itemizedlist>
					<listitem>
						<simpara>Level layout: nodes are placed on rows, nodes without any incoming
							arc being placed at the top and nodes without any outgoing arc at the bottom.</simpara>
						<figure id="fig_levelLayout">
							<title>Level layout example</title>
							<mediaobject>
								<imageobject>
									<imagedata fileref="../figures/levelLayout.png"/>
								</imageobject>
							</mediaobject>
						</figure>
					</listitem>
					<listitem>
						<simpara>Ring layout: nodes are placed on three concentric rings, source
							nodes at the center, terminal nodes at the periphery. </simpara>
						<figure id="fig_ringLayout">
							<title>Ring layout example</title>
							<mediaobject>
								<imageobject>
									<imagedata fileref="../figures/ringLayout.png"/>
								</imageobject>
							</mediaobject>
						</figure>
					</listitem>
				</itemizedlist>
				<para>Both the level and ring layouts have an inversed counterpart.</para>
			</section>
		</section>
		<section id="sec_secWindow">
			<title>The secondary window</title>
			<para>This window, which is originally attached to the main frame, offers a bird view of
				the graph and 3 tabs: </para>
			<orderedlist>
				<listitem>
					<simpara><emphasis>Modelling Attributes</emphasis> (this name changes according
						to the context),</simpara>
				</listitem>
				<listitem>
					<simpara><emphasis>Graphical Attributes</emphasis>,</simpara>
				</listitem>
				<listitem>
					<simpara><emphasis>Graph Attributes</emphasis>.</simpara>
				</listitem>
			</orderedlist>
			<para>The <emphasis>Modelling Attributes</emphasis> and <emphasis>Graph
				Attributes</emphasis> tabs are specific to the type of graph and will be detailed
				later on.</para>
			<para>Different tabs are activated depending on the current selection:</para>
			<itemizedlist>
				<listitem>
					<simpara>if nothing is selected, only the <emphasis>Graph Attributes</emphasis>
						tab is active,</simpara>
				</listitem>
				<listitem>
					<simpara>if one node or one edge is selected, the first two tabs are
					active,</simpara>
				</listitem>
				<listitem>
					<simpara>if several nodes or several edges are selected, only the
							<emphasis>Graphical Attributes</emphasis> tab is active,</simpara>
				</listitem>
				<listitem>
					<simpara>if the selection contains both nodes and edges, all tabs are
					inactive.</simpara>
				</listitem>
			</itemizedlist>
			<section id="sec_graphicAttributes">
				<title>Graphical Attributes</title>
				<para>The <emphasis>Graphical Attributes</emphasis> tab in the secondary window
					allows to change the visual properties of the graph elements.</para>
				<itemizedlist>
					<listitem>
						<simpara>Nodes:</simpara>
						<itemizedlist>
							<listitem>
								<simpara>background and foreground color,</simpara>
							</listitem>
							<listitem>
								<simpara>shape and size.</simpara>
							</listitem>
						</itemizedlist>
					</listitem>
				</itemizedlist>
				<figure id="fig_graphicAttributes">
					<title>Graphical attributes for nodes</title>
					<mediaobject>
						<imageobject>
							<imagedata fileref="../figures/vertex_vs.png"/>
						</imageobject>
					</mediaobject>
				</figure>
				<itemizedlist>
					<listitem>
						<simpara>Arcs: </simpara>
						<itemizedlist>
							<listitem>
								<simpara>line color,</simpara>
							</listitem>
							<listitem>
								<simpara>line width,</simpara>
							</listitem>
							<listitem>
								<simpara>intermediate points: they can be either automatically or
									manually placed,</simpara>
							</listitem>
							<listitem>
								<simpara>drawing method: straight from one point to the next one, or
									following a bezier curve.</simpara>
							</listitem>
						</itemizedlist>
					</listitem>
				</itemizedlist>
				<para>When the option for intermediate points is set to <emphasis>Manual</emphasis>,
					the points can be added by right-clicking on an arc. As the underlying drawing
					tool does not support <emphasis>ctrl+click</emphasis> to emulate right-click on
					Mac OSX, an additional toolbar button allows to insert them with a normal click
						(<inlinegraphic fileref="../figures/buttons/custumizeedgerouting.gif"/>).</para>
				<figure id="fig_arcGraphicAttr">
					<title>Graphical attributes for arcs</title>
					<mediaobject>
						<imageobject>
							<imagedata fileref="../figures/edge_vs.png"/>
						</imageobject>
					</mediaobject>
				</figure>
				<tip>
					<simpara>Buttons on the right side of the tab allow to apply the selected
						graphical attributes to additional elements: </simpara>
					<itemizedlist>
						<listitem>
							<simpara role="newline"><emphasis>Apply to All:</emphasis> apply the
								selected attributes (those for which the checkbox is selected) to
								all nodes (or edges) of the graph. Note that, if several elements
								are selected, the selected attributes are only applied to the
								selection.</simpara>
						</listitem>
						<listitem>
							<simpara role="newline"><emphasis>Set as Default:</emphasis> use the
								selected attributes as default for elements that will be created in
								the future.</simpara>
						</listitem>
					</itemizedlist>
				</tip>
			</section>
			<section id="sec_birdView">
				<title>Bird view</title>
				<para>The bird view offers an overview of the graph, a red rectangle highlighting
					the viewed part. It also offers some navigation facilities:</para>
				<itemizedlist>
					<listitem>
						<simpara>click on it to change the viewed part,</simpara>
					</listitem>
					<listitem>
						<simpara>resize the red square (using the bottom right corner) to change the
							zoom factor.</simpara>
					</listitem>
				</itemizedlist>
			</section>
		</section>
		<section id="sec_whattodo" xreflabel="processing a new graph">
			<title>Processing a new graph</title>
			<para>When a graph is generated (state transition graph or graph of the strongly
				connected components), the user can choose to display it, to perform some actions on
				it or to save it, through the <emphasis>What to do</emphasis> dialog box.</para>
			<figure id="fig_whattodo">
				<title>The <emphasis>Processing the New Grah</emphasis> dialog box</title>
				<mediaobject>
					<imageobject>
						<imagedata fileref="../figures/whattodo.png"/>
					</imageobject>
				</mediaobject>
			</figure>
			<para>For state transition graphs, the number of stable states appears at the top-right
				corner.</para>
			<para>Clicking on the "OK" button performs the selected action. This dialog box remains
				available to perform different actions on the graph. This dialog is closed when
				the graph is displayed, as all actions can then be performed through the
					<emphasis>Actions</emphasis> menu of the GINsim window.</para>
		</section>
	</section>
	<section id="sec_editRegGraph">
		<?dbhtml filename="editRegulatoryGraph.html"?>
		<title>Editing the regulatory graph</title>
		<para> Regulatory graphs can be interactively modified: genes and interactions can be added,
			removed and their properties redefined. Elements can be added, depending on the current
			editing mode: <informaltable>
				<tgroup cols="2">
					<colspec colname="c1"/>
					<colspec colname="c2"/>
					<thead>
						<row>
							<entry namest="c1" nameend="c2">Available editing modes for regulatory
								graphs</entry>
						</row>
					</thead>
					<tbody>
						<row><entry><inlinegraphic fileref="../figures/buttons/deletemode.gif" /></entry>
							<entry>Deletion option: selected items are deleted.</entry></row>
						<row><entry><inlinegraphic fileref="../figures/buttons/editmode.gif" /></entry>
							<entry>Default editing mode: allows to select and move objects.</entry></row>
						<row><entry><inlinegraphic fileref="../figures/buttons/insertsquare.gif" /></entry>
							<entry>Gene insertion mode: when selected, clicking on the graph panel adds a new gene.</entry></row>
						<row>
							<entry>
								<inlinegraphic fileref="../figures/buttons/insertpositiveedge.gif" />
								<inlinegraphic fileref="../figures/buttons/insertnegativeedge.gif" />
								<inlinegraphic fileref="../figures/buttons/insertunknownedge.gif" />
								</entry>
							<entry>Interaction insertion mode: when selected, interactions are added by dragging from one gene to another. The interactions must be complemented by the definition of the logical parameters for the target variable (see below). The three buttons allow to add different kinds of interactions: activation, inhibition or undefined.</entry></row>
						<row><entry><inlinegraphic fileref="../figures/buttons/custumizeedgerouting.gif" /></entry>
							<entry>Arc modification mode: when selected, intermediate points can be added or removed.</entry></row>
						</tbody>
				</tgroup>
			</informaltable></para>
			<note><simpara>The terms <emphasis>gene</emphasis> and <emphasis>interaction</emphasis>
			are used through this document, but nodes of the regulatory graph can represent other types of 
			<emphasis>regulatory components</emphasis>, <emphasis>e.g.</emphasis> proteins,
			 or yet global cellular characteristics such as cell mass. 
			Similarly, arcs can denote transcriptional regulations but also protein phosphorylation, degradation, 
			complex formation...</simpara></note>
		<section id="sec_notes">
			<title id="notes">Annotations</title>
			<para>Annotations can be attached to the different components of the regulatory graph:</para>
			<itemizedlist>
				<listitem>
					<simpara>the graph itself,</simpara>
				</listitem>
				<listitem>
					<simpara>genes,</simpara>
				</listitem>
				<listitem>
					<simpara>interactions.</simpara>
				</listitem>
			</itemizedlist>
			<para>An annotation is composed of a textual comment and a list of URLs.</para>
			<figure id="fig_notes">
				<title>Annotations</title>
				<mediaobject>
					<imageobject><imagedata fileref="../figures/annotation.png"/></imageobject>
					<caption>
						<simpara>The same <emphasis>Note panel</emphasis> is used for all elements
							supporting notes. This screenshot shows this panel in the
								<emphasis>Graph Attributes</emphasis> tab.</simpara>
					</caption>
				</mediaobject>
			</figure>
		</section>
		<section id="sec_geneOrder">
			<title>Gene order</title>
			<para>Genes are always ordered in GINsim. This order has no effect on the regulatory 
			graph itself but may affect the (partial) simulation and the state transition graph (the same 
			order being used in the states names). The default order follows the chronology of node additions.
			This order can be modified using the arrows on the left side of the <emphasis>Graph Attributes</emphasis> tab.</para>
			<figure id="fig_geneOrder">
				<title>Changing gene order</title>
				<mediaobject>
					<imageobject>
						<imagedata id="orderAnim" fileref="../figures/node_order.png"/>
					</imageobject>
					<caption>
						<para>The left part of the <emphasis>Graph Attributes</emphasis> tab of a
							regulatory graph lists all genes of the model and allows to modify their
							order. The "up" and "down" buttons move selected genes in the
						list.</para>
					</caption>
				</mediaobject>
			</figure>
			<tip>
				<para>In all lists, several elements can be selected using the
					<emphasis>ctrl</emphasis> key (<emphasis>apple/cmd</emphasis> key on Mac OS X)
					 or <emphasis>shift</emphasis> key.</para>
				<para>Several lists can be reordered using the "up" and "down" buttons.</para>
			</tip>
		</section>
		<section id="sec_geneAttr">
			<title>Gene attributes</title>
			<para>When a single gene is selected, the <emphasis>Modelling Attributes</emphasis> tab
				allows to define its properties:</para>
			<itemizedlist>
				<listitem>
					<simpara><emphasis>Name</emphasis>: long name of the gene, optional.</simpara>
				</listitem>
				<listitem>
					<simpara><emphasis>Id</emphasis>: identifier of the gene, appears in the graph
						and must be unique.</simpara>
				</listitem>
				<listitem>
					<simpara><emphasis>Max value</emphasis>: the maximal expression level of the
						gene. The default value is 1 (boolean case). It can be increased to generate
						multi-valued genes.</simpara>
				</listitem>
				<listitem>
					<simpara><emphasis>Basal value</emphasis>: the value towards which the node
						tends when none of its regulators is active. The default value is
					0.</simpara>
				</listitem>
				<listitem>
					<simpara><emphasis>Logical parameters</emphasis>: define the dynamical evolution
						of the expression level depending on the active incoming
					interactions.</simpara>
				</listitem>
			</itemizedlist>
			<figure id="fig_geneAttr">
				<title>Attributes of a gene</title>
				<mediaobject>
					<imageobject>
						<imagedata id="fig_nodeSetting" fileref="../figures/geneConfig.png"/>
					</imageobject>
					<caption>
						<para>Properties of the gene Cro, as defined in the
							<emphasis>lambda4</emphasis> model (used in the 
							<olink targetdoc="tutorial">tutorial</olink> and available in the 
							<ulink url="http://gin.univ-mrs.fr/GINsim/model_repository.html">model repository</ulink>.</para>
					</caption>
				</mediaobject>
			</figure>
			<note>
				<simpara>The <emphasis>Modelling Attributes</emphasis> tab is divided into two
					parts. The <emphasis>Annotations</emphasis> and <emphasis>Parameters</emphasis>
					buttons (bottom left) respectively select <link linkend="notes">annotations</link> and
						<link linkend="sec_logicalParameters">logical parameters</link> editing.</simpara>
			</note>
			<section id="sec_logicalParameters">
				<title>Logical parameters</title>
				<para>When a gene is selected, <emphasis role="strong">logical parameters</emphasis>
					for this gene can be defined in the right part of the
						<emphasis>Modelling Attribute</emphasis> tab. The panel dedicated to the
					definition of logical parameters is divided into three parts: <itemizedlist>
						<listitem>
							<simpara>On the left, a table lists all defined logical parameters,
								showing their values and related interactions.</simpara>
						</listitem>
						<listitem>
							<simpara>On the right, the list of all incoming interactions on the
								selected gene.</simpara>
						</listitem>
						<listitem>
							<simpara>The central part contains the following buttons:</simpara>
							<itemizedlist>
								<listitem>
									<simpara>"&lt;&lt;" assigns the set of selected incoming
										interactions (from the right list) to the selected logical
										parameter,</simpara>
								</listitem>
								<listitem>
									<simpara>"X" deletes the selected logical
									parameter(s),</simpara>
								</listitem>
								<listitem>
									<simpara>"up" and "down" arrows reorder the selected logical
										parameters.</simpara>
								</listitem>
							</itemizedlist>
						</listitem>
					</itemizedlist></para>
				<figure id="fig_defLogParam">
					<title>Definition of non zero parameters for C1</title>
					<mediaobject id="logPara">
						<imageobject>
							<imagedata fileref="../figures/configuredInteraction.png"/>
						</imageobject>
						<caption>
							<para condition="html"><ulink condition="html"
									url="javascript:show('logPara')">Show animation</ulink></para>
							<para>The logical parameter panel, showing all parameters for C1.</para>
						</caption>
					</mediaobject>
				</figure>
				<tip>
					<itemizedlist>
						<listitem>
							<simpara>While logical parameters can be numerous, usually many of them
								take the value zero. To ease parameter definition, only non-zero
								parameters have to be defined in GINsim.</simpara>
						</listitem>
						<listitem>
							<simpara>Adding the same set of interactions twice is impeded.</simpara>
						</listitem>
						<listitem>
							<simpara>The set of interactions associated to a logical parameter can
								be modified: select the parameter and the corresponding set of
								interactions will be selected in the right list. This set can then
								be modified, and the "&lt;&lt;" button applies changes. If the new
								interaction set is already defined in the list of logical
								parameters, nothing is changed.</simpara>
						</listitem>
						<listitem>
							<simpara>To add a new logical parameter when an existing one is already
								selected, select the empty line at the bottom of the list.</simpara>
						</listitem>
					</itemizedlist>
				</tip>
			</section>
		</section>
		<section id="sec_interaction">
			<title>Interactions</title>
			<para>When a single arc is selected, the <emphasis>Modelling Attributes</emphasis> tab
				allows to define its properties</para>
			<figure id="fig_arcAttr">
				<title>Properties of an arc</title>
				<mediaobject>
					<imageobject>
						<imagedata id="fig_edgeConfig" fileref="../figures/interactionConfig.png"/>
					</imageobject>
					<caption>
						<para>Properties of the Cro-N arc in the <emphasis>lambda4</emphasis>
						model.</para>
					</caption>
				</mediaobject>
			</figure>
			<para> Depending on its activity level, a gene may have different effects on another one.
			The corresponding arc then contains several interactions, listed on the left. <itemizedlist>
					<listitem>
						<simpara>The "+" button adds an interaction.</simpara>
					</listitem>
					<listitem>
						<simpara>The "X" button deletes the selected interaction.</simpara>
					</listitem>
					<listitem>
						<simpara>Properties of the selected interaction can de defined: </simpara>
						<itemizedlist>
							<listitem>
								<simpara><emphasis>Min</emphasis> and <emphasis>Max</emphasis>
									define its <emphasis>range of activity</emphasis>. The
									interaction is <emphasis role="strong">active</emphasis> when
									the activity level of its source gene is in this
								range.</simpara>
							</listitem>
							<listitem>
								<simpara role="newline"><emphasis>Sign</emphasis>: 
									an interaction can be labelled as an activation, an inhibition or unknown.
									This is only a visual hint, as the real effects of interactions are defined
									through <link linkend="sec_logicalParameters">logical
									parameters.</link></simpara>
							</listitem>
						</itemizedlist>
					</listitem>
				</itemizedlist></para>
		</section>
		<section id="sec_modelIntegrity">
			<title>Model integrity</title>
			<para>GINsim keeps the definition of regulatory graphs consistent: <itemizedlist>
					<listitem>
						<simpara>When an interaction is deleted, all logical parameters in which it
							was involved are also deleted.</simpara>
					</listitem>
					<listitem>
						<simpara>When the max value of a node is decreased, interactions and logical
							parameters are checked and, if necessary, updated silently to avoid
							inconsistencies.</simpara>
					</listitem>
				</itemizedlist> These automatic changes are necessary to keep the model valid, but
				they can alter it. Keep in mind that you need to double-check parameters after
				performing such changes.</para>
			<important>
				<simpara>When a gene has several actions on another one, the activation ranges of
					these interactions should usually be disjoint, but GINsim does not check this
					property.</simpara>
			</important>
			<para role="lineBreak">Checking activation intervals of interactions and the correctness
				of logical parameters is left to the user as adding more controls generates more
				annoyances than real help. Invalid logical parameters are highlighted to ease their
				detection. Keep in mind that a change in the activation-range of one of the
				interactions can turn a valid logical parameter into an ill-defined one. Parameters
				involving interactions from the same source with disjoint activity ranges 
				are also ill-defined and thus highlighted for correction.</para>
		</section>
	</section>
	<section id="sec_simulation" xreflabel="simulation">
		<?dbhtml filename="simulation.html"?>
		<title>The simulation</title>
		<para>Once a regulatory model has been defined, a simulation can be launched through the
				<emphasis>Run Simulation</emphasis> option of the <emphasis>Action</emphasis> menu.
			This option triggers a dialog box allowing to choose simulation settings (<xref
				linkend="fig_configSimulation" xrefstyle="select:label"/>).</para>
		<figure id="fig_configSimulation">
			<title>Simulation settings</title>
			<mediaobject>
				<imageobject>
					<imagedata fileref="../figures/simulation_config.png"/>
				</imageobject>
				<caption>
					<simpara>This dialog box allows to configure and run the simulation.</simpara>
				</caption>
			</mediaobject>
		</figure>
		<section id="sec_simulationSettings">
			<title>Simulation Parameters</title>
			<para>This dialog box allows to define a set of simulation settings:
				several simulation settings can be created, saved and restored with the graph, <emphasis>provided that the
					extended save is selected</emphasis>.</para>
			<para>The right part of the dialog box enables the definition of the current simulation setting.</para>
			<para>The left part of the dialog box enables to add, remove or switch between simulations settings.</para>
		</section>
		<section id="sec_initialStates">
			<title>Initial states</title>
			<para>The bottom part of the dialog box is dedicated to the definition and the selection
				of the initial states of the simulation (see <xref linkend="fig_configSimulation"
				xrefstyle="select:label"/>). A table lists and enables the definition of additional
				initial states. Note that the definition of initial states is shared between all simulation settings.
			</para>
			<para>Each row of the table corresponds to a set of states. Gene levels are 
				specified in the corresponding table cell. 
				Multiple expression levels can be defined using semicolon (;) or in terms of list of values
				or intervals (denoted by a dash). The special value "m" denotes the maximal value
				of the gene. For example, "0;2-4" means "0 or values between 2 and 4"; "0-m" means
				"any	expression level". The default, denoted by a "*", covers all possible values (it is
				thus the same as "0-m").</para>
			<tip>A value can be entered in a set of selected cells at once.</tip>
			<para>To be used for the current simulation setting, a row must be selected (using
				checkboxes in the second column). Only the states corresponding to the selected 
				row(s) are considered for the simulations. If no row is selected, all possible states
				are considered generating a complete state transition graph.</para>
<!--
			<para>The simulation will start with every selected initial states, unless they have
				already been reached by a previous simulation (<emphasis>i.e.</emphasis> from another initial state).</para>
-->
			<note>
				<simpara>The "X" button deletes the selected row of initial states. The "reset"
					button unselects all selected rows.</simpara>
			</note>
		</section>
		<section id="sec_mutants" xreflabel="mutants definition">
			<title>Mutant Definition</title>
			<para>GINsim facilitates the definition of <emphasis>mutants</emphasis>, which can then be
				selected before running a simulation. A mutant is a set of restrictions on the
				evolution of gene activity levels. The <emphasis>Configure</emphasis> button of the
				<emphasis>Mutant</emphasis> panel (in the simulation dialog box, but also in some
				panels) opens a dialog box, allowing to specify minimal and maximal activity
				levels for some genes. Once the activity level of a gene enters the specified
				interval, it can not leave it anymore, i.e. transitions pushing the gene outside of
				the interval are ignored. This enables the definition of different perturbations (knockouts
				or ectopic expressions for one or several genes) as an extension of the model. The
				simulation of more subtle mutants (conditional knockouts...) still requires
				modifications of the logical parameters.</para>
			<warning>
				<simpara>These representation of mutants blocks some transitions, but does not
					affect trajectories where the activity level of the gene is outside of this
					range. Completely locking the expression level of a gene requires to properly
					set its initial values.</simpara>
			</warning>
			<figure id="fig_mutantDef">
				<title>Mutant definition</title>
				<mediaobject id="mdef">
					<imageobject>
						<imagedata fileref="../figures/mutantDef.png"/>
					</imageobject>
					<caption>Dialog box for the definition of mutants.<para condition="html"><ulink
								url="javascript:show('mdef')">Show
					animation</ulink></para></caption>
				</mediaobject>
			</figure>
			<figure id="fig_mutantsResult">
				<title>Mutant simulation result</title>
				<mediaobject>
					<imageobject>
						<imagedata fileref="../figures/blocking.png"/>
					</imageobject>
					<caption>Result of an asynchronous simulation, where the expression level for Cro has been blocked at 1.
					The state transition graph is the same as the original asynchronous one, but all transitions where Cro leaves
					this value have been suppressed. This state transition graph is now composed of two disconnected parts,
					with a new stable state.</caption>
				</mediaobject>
			</figure>
		</section>
		<section id="sec_constructionStrategy">
			<title>Construction Strategy</title>
			<para>In a given state of the system, one or several genes are called to update their
				values. When several changes are pending, different construction strategies lead to
				different successor states and thus to different state transition graphs.</para>
			<section id="sec_synchronous">
				<title>Synchronous mode</title>
				<para>In this mode, all updating calls are performed simultaneously. This simplification
					may generate artefacts in the state transition graph.</para>
				<para>Each state has then at most one successor state, which encompasses fully
					updated gene levels.</para>
			</section>
			<section id="sec_asynchronous">
				<title>Asynchronous mode</title>
				<para>In this mode, all changes are performed independantly. It will generate a
					state transition graph taking into account any possible trajectories. This mode
					is chosen by default.</para>
				<para>A given state may have several successor states, each of them corresponding to a
					single updating of one gene level.</para>
				<para>In this mode, the graph transition state can be generated "depth first" or
					"breadth first". The same state transition graph will be built, except if
					interrupted (for illustration, see <link linkend="sec_dslimit">depth and size
						limitation</link>).</para>
				<figure id="fig_syncvsasync">
					<title>Construction strategy: synchronous versus asynchronous</title>
					<mediaobject>
						<imageobject>
							<imagedata fileref="../figures/a-sync.png"/>
						</imageobject>
						<caption>Samples of simulation results for the lambda4 model, applying
							asynchronous and synchronous strategies to the same initial states (all
							states where C1=0 and Cro&gt;0). Dotted arcs denote multiple,
							simultaneous transitions.</caption>
					</mediaobject>
				</figure>
			</section>
			<section id="sec_pclass">
				<title>Priority classes</title>
				<para>This strategy allows the user to group components into different classes, and
					to assign a priority level to each of these classes. In case of concurrent
					transition calls, GINsim first updates the gene(s) belonging to the class with
					the highest ranking. For each class, the user can further specify the desired
					updating assumption, which then determines the treatment of concurrent
					transition calls inside that class. When several classes have the same ranking,
					concurrent transitions are treated under an asynchronous assumption (no
					priority).</para>
				<para>By default, all transitions belong to the same asynchronous class. Running a
					simulation without further configuration is thus the same as using the
					asynchronous assumption.</para>
				<para>The left part of the configuration dialog box shows a list of priority classes
					(see <xref linkend="fig_pclass" xrefstyle="select:label"/>). The name of a class
					can be edited and a checkbox allows to change its internal mode from
					asynchronous (unchecked) to synchronous (checked). Buttons enable to add (+),
					delete (X), order (using the arrows) and group/ungroup (G) priority classes.</para>
				<para>The central column lists transitions that belong to the currently selected
					class, while the column on the right displays all other transitions (<emphasis>i.e.</emphasis> belonging to
					other classes). To add transitions to the selected class, choose them in the
					right list an click on the "&lt;&lt;" button. The "&gt;&gt;" button removes the
					transition selected in the central list from the current class and add them to
					the first class in the list.</para>
				<para>Finally, a drop-down list on the bottom left, allows to apply some predefined settings.</para>
				<figure id="fig_pclass">
					<title>Definition of Priority classes</title>
					<mediaobject id="pclass">
						<imageobject>
							<imagedata fileref="../figures/priorityClass.png"/>
						</imageobject>
						<caption>
							<para condition="html"><ulink url="javascript:show('pclass')">Show
									animation</ulink></para>
						</caption>
					</mediaobject>
				</figure>
				<figure id="fig_dynpclass">
					<title>Priority Class: example result</title>
					<mediaobject>
						<imageobject>
							<imagedata fileref="../figures/dyn_pclass.png"/>
						</imageobject>
						<caption>
							<para>Example of simulation by priority classes. Two priority classes
								have been created. The highest ranked one is synchronous and
								contains C1, C2 and Cro. The other class contains only N. The
								resulting state transition graph is splited into two parts: N
								expressed <emphasis>versus</emphasis> N not expressed.</para>
						</caption>
					</mediaobject>
				</figure>
			</section>
		</section>
		<section id="sec_dslimit">
			<title>Depth and size limitations</title>
			<para>An option is also offered to limit the search depth and/or the total number of
				states generated in a simulation.</para>
			<para>The limit on depth applies to all simulation modes, excepting the asynchronous
				breadth first one (where no information on depth is stored). </para>
			<warning>
				<simpara>When considering several initial states, some of them can be reached while
					running the simulation from an other state. In this case, no new search will be
					triggered for them and the depth counter will not be reinitialised (i.e. the
					depth limit for these initial states will be shorter).</simpara>
			</warning>
			<figure id="fig_dfl">
				<title>Limitation of the depth in the case of a depth first construction</title>
				<mediaobject>
					<imageobject>
						<imagedata fileref="../figures/stg_depth_limit.png"/>
					</imageobject>
					<caption>State transition graph with all reachable states from the state "0111".
						The same simulation with a depth limit set to 2 keeps only the initial state
						and the nodes at a distance of two or less (i.e. the six white
					states).</caption>
				</mediaobject>
			</figure>
			<para>The limit on the total number of states apply to all simulation modes. Under the
				asynchronous assumption, this limit has slightly different effects on depth first
				and breadth first search.</para>
			<figure id="fig_sizeLimits">
				<title>Limitation of the size (depth first and breadth first search construction)</title>
				<mediaobject>
					<imageobject>
						<imagedata fileref="../figures/stg_size_limit.png"/>
					</imageobject>
					<caption>
						<para>The limit on the total number of nodes has different effects on depth
							first and breadth first state transition graphs. These examples show the
							graph of <xref linkend="fig_dfl" xrefstyle="select:label"/> limited to 6
							states. The first state transition graph was obtained using the depth
							first construction, whereas the second results from the breadth first
							one.</para>
					</caption>
				</mediaobject>
			</figure>
		</section>
		<section id="sec_runSimulation">
			<title>Running the simulation</title>
			<para>While the simulation is running, the bottom left corner indicates the size of the
				generated state transition graph. The simulation can be interrupted, using the
					<emphasis>Cancel</emphasis> button, without loosing the calculated part of the
				state transition graph.</para>
			<para>At the end of a simulation, several options are available to save, display or analyse the
				resulting state transition graph (see <xref linkend="sec_whattodo" xreflabel="select:label"/>).</para>
		</section>
	</section>
	<section id="sec_analyseRegGraph">
		<?dbhtml filename="analyseRegulatoryGraph.html"?>
		<title>Analysing the regulatory graph</title>
		<section id="sec_stableStates" xreflabel="stable states">
			<title>Stable State Search</title>
			<para>The <emphasis>Stable States</emphasis> option of the <emphasis>Actions</emphasis>
				menu allows the analytic (<emphasis>i.e.</emphasis> without running a simulation) determination of stable
				states of the model. All stable states are determined, regardless of their
				reachability, using an algorithm described in <xref linkend="Naldi2007"/>. The
				stable states dialog box (see <xref linkend="fig_stableStates"
					xrefstyle="select:label"/>) allows to run the analysis after the optional
				selection of a mutant. The result is shown in a table in the same dialog box, allowing
				to launch a novel analysis for another mutant. A "*" in the table denotes that
				each of the values of this component gives rise to a stable state (or several if another
				"*" appears in the same row).</para>
			<figure id="fig_stableStates">
				<title>The stable states dialog box, showing the result of the analysis</title>
				<mediaobject>
					<imageobject>
						<imagedata fileref="../figures/stableStates.png"/>
					</imageobject>
					<caption/>
				</mediaobject>
			</figure>
		</section>
		<section id="sec_circuits" xreflabel="functionality domains of regulatory circuits">
			<title>Functionality of Regulatory Circuits</title>
			<para> Regulatory circuits play crucial roles in the dynamical behaviour of a system.
				Indeed, positive circuits are required for the existence of several attractors, whereas negative
				circuits may generate cyclic attractors <xref linkend="Thieffry2007"/>. In <xref linkend="Naldi2007"/>, we 
				describe a method to analyse the dynamical roles of regulatory circuits.
				An implementation of this analysis is available in GINsim using the
				<emphasis>Circuits Functionality</emphasis> option of the <emphasis>Action</emphasis>
				menu (see <xref linkend="fig_circuits" xrefstyle="select:label"/>).
			</para>
			<figure id="fig_circuits">
				<title>Finding and analysing regulatory circuits</title>
				<mediaobject>
					<imageobject>
						<imagedata fileref="../figures/circuitsConfig.png"/>
					</imageobject>
					<caption>A first dialog enables to select which circuits will be analysed, by specifying
						constraints on the length of the circuits or on the involved actors. By default all
						circuits are considered.
					</caption>
				</mediaobject>
				<mediaobject>
					<imageobject>
						<imagedata fileref="../figures/circuits.png"/>
					</imageobject>
					<caption>When this first step is completed, the second dialog shows the list of circuits and
						enables to run the analysis. When the analysis is completed, new branches then displays 
						the functional circuits, classified according to their signs.
						When a circuit is selected, its functionality context is shown at the bottom of the dialog box.
						The analysis can be performed for the wild type model or for any predefined mutant.
					</caption>
				</mediaobject>
			</figure>
		</section>
		<section id="sec_pn" xreflabel="Petri net">
			<title>Petri Net Export</title>
			<para>
				Regulatory graphs can be exported into discrete <!-- TODO: check nomenclature with claudine -->
				Petri net using the rewriting method described in <xref linkend="Chaouiya2006"/>.
			</para>
			<figure>
				<title>The Petri Net export dialog</title>
				<mediaobject>
					<imageobject>
						<imagedata fileref="../figures/pnexport.png"/>
					</imageobject>
					<caption>The Petri Net export dialog box allows to select the export format, the initial markup and the 
						mutant to apply before exporting. The initial markup can be generated from an existing initial state
						of the model  (modifications made in this dialog are also applied to the simulation settings); only the 
						first selected state is used.
					</caption>
				</mediaobject>
			</figure>
		</section>
		<section id="sec_cytoscape" xreflabel="Cytoscape export">
			<title>Cytoscape Export</title>
			<para>
				Regulatory graphs can be exported to the <ulink url="http://www.cytoscape.org/">cytoscape</ulink> format.
				As cytoscape is not a modelling tool, this export only preserves the structure and appareance of the graph,
				not the logical parameters.
				An experimental cytoscape plugin is available on request to perform the complementary operation
				(i.e. export a cytoscape model into GINML).
			</para>
		</section>
	</section>
	<section id="sec_analyseSTGraph">
		<?dbhtml filename="analyseDynamicGraph.html"?>
		<title>Analysing the state transition graph</title>
		<section id="sec_scc">
			<title>Strongly connected components</title>
			<para>GINsim allows to compute the graph of the Strongly Connected Components (SCC
				graph, <emphasis>cf.</emphasis> <ulink url="http://en.wikipedia.org/wiki/Strongly_connected_component"/>)
				of an existing graph, through the <emphasis>SCC graph</emphasis> option of the
				<emphasis>Actions</emphasis> menu. The SCC graph is an acyclic graph abstracted
				from the original one: each node of the SCC graph corresponds to a cycle or a set of intertwined
				cycles of the original graph. The resulting graph is thus usually much more compact.</para>
			<figure id="fig_scc">
				<title>Strongly Connected Components graph</title>
				<mediaobject>
					<imageobject>
						<imagedata fileref="../figures/scc.png"/>
					</imageobject>
					<caption>
						<simpara>Example of Strongly Connected Component Graph (bottom right) and
						the corresponding statetransition graph (top left). 
						The <emphasis>Selection Attribute</emphasis> tab in the bottom panel shows
						the content of the selected SCC (<emphasis>i.e.</emphasis> the list of nodes
						in the original graph).</simpara>
					</caption>
				</mediaobject>
			</figure>
			<para>Note that the <emphasis>SCC Graph</emphasis> tool can also be applied to
				regulatory graphs.</para>
		</section>
		<section id="sec_pathFinder">
			<title>Path finder</title>
			<para>The "search path" action enables the determination of paths between pairs of states of the state transition graph.
			Selecting the "search a path" action in the action menu opens a configuration dialog box, which allows the specification
			of a starting state, a target state , and optional intermediate states (using the "+" and "X" buttons to add/remove them).
			GINsim then performs a shortest path search. If several paths exist between these states, the first encountered shortest
			path is returned.</para>
			<figure id="fig_pathFinder">
				<title>Search for a path in the state transition graph</title>
				<mediaobject>
					<imageobject>
						<imagedata fileref="../figures/search_path.png"/>
					</imageobject>
					<caption>
						<para>The search tool has found a path from the state
							<emphasis>0110</emphasis> to <emphasis>0311</emphasis>, involving four
							steps.</para>
					</caption>
				</mediaobject>
			</figure>
		</section>
		<section id="sec_animator" xreflabel="Animation plugin">
			<title>Animation plugin</title>
			<para>The animation tool is launched through the <emphasis>Animate</emphasis> option of
				the <emphasis>Action</emphasis> menu of a state transition graph. It allows to
				interactively follow a trajectory in the state transition graph. Genes of the
				regulatory graph are highlighted, to display the corresponding activity levels (<emphasis>cf.</emphasis>
				<xref linkend="fig_animation" xrefstyle="select:label" />).</para>
			<figure id="fig_animator">
				<title>The animation plugin</title>
				<mediaobject id="animator">
					<imageobject>
						<imagedata fileref="../figures/animator.png"/>
					</imageobject>
					<caption>
						<para condition="html"><ulink url="javascript:show('animator')">Show animation</ulink></para>
					</caption>
				</mediaobject>
			</figure>
			<para>To follow a trajectory in the state transition graph, select a starting state. It
				is then colorized in blue and added to the trajectory (listed in the animation
				dialog box). Its successor states are highlited, and can be added to the
				trajectory upon selection, which in turns changes the available successor states.</para>
			<para>To build another trajectory, select a state in the dialog and press the "&lt;&lt;"
				button to remove it and all of its successors.</para>
			<para>To view the defined trajectory, select the starting state and press the "|&gt;"
				button.</para>
		</section>
		<section id="sec_gnuplot">
			<title>Trajectory visualisation with gnuplot</title>
			<para><phrase id="gnuplot"/>A path created with the animation plugin or found by the path
				finder can be visualized using <ulink url="http://www.gnuplot.info/">gnuplot</ulink>.
				The "GP" button (in the path finder and in the animator box) opens the gnuplot export box 
				(<xref linkend="fig_gnuplot" xrefstyle="select:label" />).
			</para>
			<figure id="fig_gnuplot">
				<title>Gnuplot export box</title>
				<mediaobject>
					<imageobject>
						<imagedata fileref="../figures/gnuplotExport.png"/>
					</imageobject>
					<caption>The gnuplot export box enables the selection of the kind of graph to create
					as well as the genes to display.</caption>
				</mediaobject>
			</figure>
			<para>After selecting the kind of output and the genes to display, click "export" and choose a place to save the plot.
			Note that two files are created but only the first file name is prompted for.
			If this filename is "myplot.gnuplot", the second file will then be named	"myplot.data".
			The actual graph can then be displayed using the command
			<emphasis>load "mygraph.gnuplot"</emphasis> at the gnuplot prompt.</para>
			<figure id="fig_gnuplotResults">
				<title>gnuplot export examples</title>
				<mediaobject>
					<imageobject>
						<imagedata fileref="../figures/gnuplot.png"/>
					</imageobject>
					<caption>Examples of the two kinds of gnuplot graphs. The first one
						uses arrows of different colors to show changes in the expression levels.
						The second one show separate subgraphs for each gene.</caption>
				</mediaobject>
			</figure>
		</section>
	</section>
	<bibliography id="sec_biblio">
		<title>References</title>
		<biblioentry id="Chaouiya2003"><authorgroup>
				<author><firstname>Claudine</firstname><surname>Chaouiya</surname></author>
				<author><firstname>Elisabeth</firstname><surname>Remy</surname></author>
				<author><firstname>Brigitte</firstname><surname>Mossé</surname></author>
				<author><firstname>Denis</firstname><surname>Thieffry</surname></author>
			</authorgroup><title>Qualitative analysis of regulatory graphs: a computational tool
				based on a discrete formal framework</title><publisher><publishername>Lectures Notes
					in Control and Information Sciences</publishername></publisher>
			<pubdate>2003</pubdate>
			<volumenum>294</volumenum>
			<pagenums>119-126</pagenums>
		</biblioentry>
		<biblioentry id="Chaouiya2006"><authorgroup>
				<author><firstname>Claudine</firstname><surname>Chaouiya</surname></author>
				<author><firstname>Elisabeth</firstname><surname>Remy</surname></author>
				<author><firstname>Denis</firstname><surname>Thieffry</surname></author>
			</authorgroup><title>Qualitative Petri Net Modelling of Genetic
					Networks</title><publisher><publishername>Lecture Notes in Computer
				Science</publishername></publisher>
			<!-- <book>Transactions on Computation Systems Biology VI</book> -->
			<pubdate>2006</pubdate>
			<volumenum>4220</volumenum>
			<pagenums>95-112</pagenums>
			<biblioid class="doi">10.1007/11880646_5</biblioid>
		</biblioentry>
		<biblioentry id="Gonzalez2006"><authorgroup>
				<author><firstname>Aitor</firstname><surname>Gonzalez Gonzalez</surname></author>
				<author><firstname>Aurélien</firstname><surname>Naldi</surname></author>
				<author><firstname>Lucas</firstname><surname>Sanchez</surname></author>
				<author><firstname>Denis</firstname><surname>Thieffry</surname></author>
				<author><firstname>Claudine</firstname><surname>Chaouiya</surname></author>
			</authorgroup><title>GINsim: a software suite for the qualitative modelling, simulation
				and analysis of regulatory
				networks</title><publisher><publishername>Biosystems</publishername></publisher>
			<pubdate>2006</pubdate>
			<volumenum>84</volumenum>
			<pagenums>91-100</pagenums>
			<biblioid class="doi">10.1016/j.biosystems.2005.10.003</biblioid>
		</biblioentry>
		<biblioentry id="Naldi2007"><authorgroup>
				<author><firstname>Aurélien</firstname><surname>Naldi</surname></author>
				<author><firstname>Denis</firstname><surname>Thieffry</surname></author>
				<author><firstname>Claudine</firstname><surname>Chaouiya</surname></author>
			</authorgroup><title>Decision Diagrams for the Representation and Analysis of Logical
				Models of Genetic
				Networks</title><publisher><publishername>LNCS:LNBI</publishername></publisher>
			<pubdate>2007</pubdate>
			<volumenum>4695/2007</volumenum>
			<pagenums>233-247</pagenums>
			<biblioid class="doi">10.1007/978-3-540-75140-3_16</biblioid>
		</biblioentry>
		<biblioentry id="Thieffry2007"><authorgroup> <!-- TODO: fill the right ref -->
				<author><firstname>Denis</firstname><surname>Thieffry</surname></author>
			</authorgroup>
			<title>Dynamical roles of biological regulatory circuits</title>
			<publisher><publishername>Briefings in Bioinformatics</publishername></publisher>
			<pubdate>2007</pubdate>
			<volumenum>8(4)</volumenum>
			<pagenums>220-5</pagenums>
			<biblioid class="doi">10.1093/bib/bbm028</biblioid>
		</biblioentry>
	</bibliography>
</article>
